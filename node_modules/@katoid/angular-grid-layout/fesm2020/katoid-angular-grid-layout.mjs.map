{"version":3,"file":"katoid-angular-grid-layout.mjs","sources":["../../../projects/angular-grid-layout/src/lib/utils/react-grid-layout.utils.ts","../../../projects/angular-grid-layout/src/lib/utils/passive-listeners.ts","../../../projects/angular-grid-layout/src/lib/utils/pointer.utils.ts","../../../projects/angular-grid-layout/src/lib/utils/grid.utils.ts","../../../projects/angular-grid-layout/src/lib/directives/drag-handle.ts","../../../projects/angular-grid-layout/src/lib/directives/resize-handle.ts","../../../projects/angular-grid-layout/src/lib/directives/placeholder.ts","../../../projects/angular-grid-layout/src/lib/grid.definitions.ts","../../../projects/angular-grid-layout/src/lib/utils/operators.ts","../../../projects/angular-grid-layout/src/lib/coercion/boolean-property.ts","../../../projects/angular-grid-layout/src/lib/coercion/number-property.ts","../../../projects/angular-grid-layout/src/lib/grid.service.ts","../../../projects/angular-grid-layout/src/lib/grid-item/grid-item.component.ts","../../../projects/angular-grid-layout/src/lib/grid-item/grid-item.component.html","../../../projects/angular-grid-layout/src/lib/utils/client-rect.ts","../../../projects/angular-grid-layout/src/lib/utils/scroll.ts","../../../projects/angular-grid-layout/src/lib/grid.component.ts","../../../projects/angular-grid-layout/src/lib/grid.component.html","../../../projects/angular-grid-layout/src/lib/grid.module.ts","../../../projects/angular-grid-layout/src/public-api.ts","../../../projects/angular-grid-layout/src/katoid-angular-grid-layout.ts"],"sourcesContent":["/**\r\n * IMPORTANT:\r\n * This utils are taken from the project: https://github.com/STRML/react-grid-layout.\r\n * The code should be as less modified as possible for easy maintenance.\r\n */\r\n\r\n// Disable lint since we don't want to modify this code\r\n/* eslint-disable */\r\nexport type LayoutItem = {\r\n    w: number;\r\n    h: number;\r\n    x: number;\r\n    y: number;\r\n    id: string;\r\n    minW?: number;\r\n    minH?: number;\r\n    maxW?: number;\r\n    maxH?: number;\r\n    moved?: boolean;\r\n    static?: boolean;\r\n    isDraggable?: boolean | null | undefined;\r\n    isResizable?: boolean | null | undefined;\r\n};\r\nexport type Layout = Array<LayoutItem>;\r\nexport type Position = {\r\n    left: number;\r\n    top: number;\r\n    width: number;\r\n    height: number;\r\n};\r\nexport type ReactDraggableCallbackData = {\r\n    node: HTMLElement;\r\n    x?: number;\r\n    y?: number;\r\n    deltaX: number;\r\n    deltaY: number;\r\n    lastX?: number;\r\n    lastY?: number;\r\n};\r\n\r\nexport type PartialPosition = { left: number; top: number };\r\nexport type DroppingPosition = { x: number; y: number; e: Event };\r\nexport type Size = { width: number; height: number };\r\nexport type GridDragEvent = {\r\n    e: Event;\r\n    node: HTMLElement;\r\n    newPosition: PartialPosition;\r\n};\r\nexport type GridResizeEvent = { e: Event; node: HTMLElement; size: Size };\r\nexport type DragOverEvent = MouseEvent & {\r\n    nativeEvent: {\r\n        layerX: number;\r\n        layerY: number;\r\n        target: {\r\n            className: String;\r\n        };\r\n    };\r\n};\r\n\r\n//type REl = ReactElement<any>;\r\n//export type ReactChildren = ReactChildrenArray<REl>;\r\n\r\n// All callbacks are of the signature (layout, oldItem, newItem, placeholder, e).\r\nexport type EventCallback = (\r\n    arg0: Layout,\r\n    oldItem: LayoutItem | null | undefined,\r\n    newItem: LayoutItem | null | undefined,\r\n    placeholder: LayoutItem | null | undefined,\r\n    arg4: Event,\r\n    arg5: HTMLElement | null | undefined,\r\n) => void;\r\nexport type CompactType = ('horizontal' | 'vertical') | null | undefined;\r\n\r\nconst DEBUG = false;\r\n\r\n/**\r\n * Return the bottom coordinate of the layout.\r\n *\r\n * @param  {Array} layout Layout array.\r\n * @return {Number}       Bottom coordinate.\r\n */\r\nexport function bottom(layout: Layout): number {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        bottomY = layout[i].y + layout[i].h;\r\n        if (bottomY > max) {\r\n            max = bottomY;\r\n        }\r\n    }\r\n    return max;\r\n}\r\n\r\nexport function cloneLayout(layout: Layout): Layout {\r\n    const newLayout = Array(layout.length);\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        newLayout[i] = cloneLayoutItem(layout[i]);\r\n    }\r\n    return newLayout;\r\n}\r\n\r\n// Fast path to cloning, since this is monomorphic\r\n/** NOTE: This code has been modified from the original source */\r\nexport function cloneLayoutItem(layoutItem: LayoutItem): LayoutItem {\r\n    const clonedLayoutItem: LayoutItem = {\r\n        w: layoutItem.w,\r\n        h: layoutItem.h,\r\n        x: layoutItem.x,\r\n        y: layoutItem.y,\r\n        id: layoutItem.id,\r\n        moved: !!layoutItem.moved,\r\n        static: !!layoutItem.static,\r\n    };\r\n\r\n    if (layoutItem.minW !== undefined) { clonedLayoutItem.minW = layoutItem.minW;}\r\n    if (layoutItem.maxW !== undefined) { clonedLayoutItem.maxW = layoutItem.maxW;}\r\n    if (layoutItem.minH !== undefined) { clonedLayoutItem.minH = layoutItem.minH;}\r\n    if (layoutItem.maxH !== undefined) { clonedLayoutItem.maxH = layoutItem.maxH;}\r\n    // These can be null\r\n    if (layoutItem.isDraggable !== undefined) { clonedLayoutItem.isDraggable = layoutItem.isDraggable;}\r\n    if (layoutItem.isResizable !== undefined) { clonedLayoutItem.isResizable = layoutItem.isResizable;}\r\n\r\n    return clonedLayoutItem;\r\n}\r\n\r\n/**\r\n * Given two layoutitems, check if they collide.\r\n */\r\nexport function collides(l1: LayoutItem, l2: LayoutItem): boolean {\r\n    if (l1.id === l2.id) {\r\n        return false;\r\n    } // same element\r\n    if (l1.x + l1.w <= l2.x) {\r\n        return false;\r\n    } // l1 is left of l2\r\n    if (l1.x >= l2.x + l2.w) {\r\n        return false;\r\n    } // l1 is right of l2\r\n    if (l1.y + l1.h <= l2.y) {\r\n        return false;\r\n    } // l1 is above l2\r\n    if (l1.y >= l2.y + l2.h) {\r\n        return false;\r\n    } // l1 is below l2\r\n    return true; // boxes overlap\r\n}\r\n\r\n/**\r\n * Given a layout, compact it. This involves going down each y coordinate and removing gaps\r\n * between items.\r\n *\r\n * @param  {Array} layout Layout.\r\n * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n *   vertically.\r\n * @return {Array}       Compacted Layout.\r\n */\r\nexport function compact(\r\n    layout: Layout,\r\n    compactType: CompactType,\r\n    cols: number,\r\n): Layout {\r\n    // Statics go in the compareWith array right away so items flow around them.\r\n    const compareWith = getStatics(layout);\r\n    // We go through the items by row and column.\r\n    const sorted = sortLayoutItems(layout, compactType);\r\n    // Holding for new items.\r\n    const out = Array(layout.length);\r\n\r\n    for (let i = 0, len = sorted.length; i < len; i++) {\r\n        let l = cloneLayoutItem(sorted[i]);\r\n\r\n        // Don't move static elements\r\n        if (!l.static) {\r\n            l = compactItem(compareWith, l, compactType, cols, sorted);\r\n\r\n            // Add to comparison array. We only collide with items before this one.\r\n            // Statics are already in this array.\r\n            compareWith.push(l);\r\n        }\r\n\r\n        // Add to output array to make sure they still come out in the right order.\r\n        out[layout.indexOf(sorted[i])] = l;\r\n\r\n        // Clear moved flag, if it exists.\r\n        l.moved = false;\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nconst heightWidth = {x: 'w', y: 'h'};\r\n\r\n/**\r\n * Before moving item down, it will check if the movement will cause collisions and move those items down before.\r\n */\r\nfunction resolveCompactionCollision(\r\n    layout: Layout,\r\n    item: LayoutItem,\r\n    moveToCoord: number,\r\n    axis: 'x' | 'y',\r\n) {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.id;\r\n        })\r\n        .indexOf(item.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static) {\r\n            continue;\r\n        }\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) {\r\n            break;\r\n        }\r\n\r\n        if (collides(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis,\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n}\r\n\r\n/**\r\n * Compact an item in the layout.\r\n */\r\nexport function compactItem(\r\n    compareWith: Layout,\r\n    l: LayoutItem,\r\n    compactType: CompactType,\r\n    cols: number,\r\n    fullLayout: Layout,\r\n): LayoutItem {\r\n    const compactV = compactType === 'vertical';\r\n    const compactH = compactType === 'horizontal';\r\n    if (compactV) {\r\n        // Bottom 'y' possible is the bottom of the layout.\r\n        // This allows you to do nice stuff like specify {y: Infinity}\r\n        // This is here because the layout must be sorted in order to get the correct bottom `y`.\r\n        l.y = Math.min(bottom(compareWith), l.y);\r\n        // Move the element up as far as it can go without colliding.\r\n        while (l.y > 0 && !getFirstCollision(compareWith, l)) {\r\n            l.y--;\r\n        }\r\n    } else if (compactH) {\r\n        // Move the element left as far as it can go without colliding.\r\n        while (l.x > 0 && !getFirstCollision(compareWith, l)) {\r\n            l.x--;\r\n        }\r\n    }\r\n\r\n    // Move it down, and keep moving it down if it's colliding.\r\n    let collides;\r\n    while ((collides = getFirstCollision(compareWith, l))) {\r\n        if (compactH) {\r\n            resolveCompactionCollision(fullLayout, l, collides.x + collides.w, 'x');\r\n        } else {\r\n            resolveCompactionCollision(fullLayout, l, collides.y + collides.h, 'y',);\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if (compactH && l.x + l.w > cols) {\r\n            l.x = cols - l.w;\r\n            l.y++;\r\n\r\n            // ALso move element as left as much as we can (ktd-custom-change)\r\n            while (l.x > 0 && !getFirstCollision(compareWith, l)) {\r\n                l.x--;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Ensure that there are no negative positions\r\n    l.y = Math.max(l.y, 0);\r\n    l.x = Math.max(l.x, 0);\r\n\r\n    return l;\r\n}\r\n\r\n/**\r\n * Given a layout, make sure all elements fit within its bounds.\r\n *\r\n * @param  {Array} layout Layout array.\r\n * @param  {Number} bounds Number of columns.\r\n */\r\nexport function correctBounds(layout: Layout, bounds: { cols: number }): Layout {\r\n    const collidesWith = getStatics(layout);\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        const l = layout[i];\r\n        // Overflows right\r\n        if (l.x + l.w > bounds.cols) {\r\n            l.x = bounds.cols - l.w;\r\n        }\r\n        // Overflows left\r\n        if (l.x < 0) {\r\n            l.x = 0;\r\n            l.w = bounds.cols;\r\n        }\r\n        if (!l.static) {\r\n            collidesWith.push(l);\r\n        } else {\r\n            // If this is static and collides with other statics, we must move it down.\r\n            // We have to do something nicer than just letting them overlap.\r\n            while (getFirstCollision(collidesWith, l)) {\r\n                l.y++;\r\n            }\r\n        }\r\n    }\r\n    return layout;\r\n}\r\n\r\n/**\r\n * Get a layout item by ID. Used so we can override later on if necessary.\r\n *\r\n * @param  {Array}  layout Layout array.\r\n * @param  {String} id     ID\r\n * @return {LayoutItem}    Item at ID.\r\n */\r\nexport function getLayoutItem(\r\n    layout: Layout,\r\n    id: string,\r\n): LayoutItem | null | undefined {\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        if (layout[i].id === id) {\r\n            return layout[i];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Returns the first item this layout collides with.\r\n * It doesn't appear to matter which order we approach this from, although\r\n * perhaps that is the wrong thing to do.\r\n *\r\n * @param  {Object} layoutItem Layout item.\r\n * @return {Object|undefined}  A colliding layout item, or undefined.\r\n */\r\nexport function getFirstCollision(\r\n    layout: Layout,\r\n    layoutItem: LayoutItem,\r\n): LayoutItem | null | undefined {\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        if (collides(layout[i], layoutItem)) {\r\n            return layout[i];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getAllCollisions(\r\n    layout: Layout,\r\n    layoutItem: LayoutItem,\r\n): Array<LayoutItem> {\r\n    return layout.filter(l => collides(l, layoutItem));\r\n}\r\n\r\n/**\r\n * Get all static elements.\r\n * @param  {Array} layout Array of layout objects.\r\n * @return {Array}        Array of static layout items..\r\n */\r\nexport function getStatics(layout: Layout): Array<LayoutItem> {\r\n    return layout.filter(l => l.static);\r\n}\r\n\r\n/**\r\n * Move an element. Responsible for doing cascading movements of other elements.\r\n *\r\n * @param  {Array}      layout            Full layout to modify.\r\n * @param  {LayoutItem} l                 element to move.\r\n * @param  {Number}     [x]               X position in grid units.\r\n * @param  {Number}     [y]               Y position in grid units.\r\n */\r\nexport function moveElement(\r\n    layout: Layout,\r\n    l: LayoutItem,\r\n    x: number | null | undefined,\r\n    y: number | null | undefined,\r\n    isUserAction: boolean | null | undefined,\r\n    preventCollision: boolean | null | undefined,\r\n    compactType: CompactType,\r\n    cols: number,\r\n): Layout {\r\n    // If this is static and not explicitly enabled as draggable,\r\n    // no move is possible, so we can short-circuit this immediately.\r\n    if (l.static && l.isDraggable !== true) {\r\n        return layout;\r\n    }\r\n\r\n    // Short-circuit if nothing to do.\r\n    if (l.y === y && l.x === x) {\r\n        return layout;\r\n    }\r\n\r\n    log(\r\n        `Moving element ${l.id} to [${String(x)},${String(y)}] from [${l.x},${\r\n            l.y\r\n        }]`,\r\n    );\r\n    const oldX = l.x;\r\n    const oldY = l.y;\r\n\r\n    // This is quite a bit faster than extending the object\r\n    if (typeof x === 'number') {\r\n        l.x = x;\r\n    }\r\n    if (typeof y === 'number') {\r\n        l.y = y;\r\n    }\r\n    l.moved = true;\r\n\r\n    // If this collides with anything, move it.\r\n    // When doing this comparison, we have to sort the items we compare with\r\n    // to ensure, in the case of multiple collisions, that we're getting the\r\n    // nearest collision.\r\n    let sorted = sortLayoutItems(layout, compactType);\r\n    const movingUp =\r\n        compactType === 'vertical' && typeof y === 'number'\r\n            ? oldY >= y\r\n            : compactType === 'horizontal' && typeof x === 'number'\r\n                ? oldX >= x\r\n                : false;\r\n    if (movingUp) {\r\n        sorted = sorted.reverse();\r\n    }\r\n    const collisions = getAllCollisions(sorted, l);\r\n\r\n    // There was a collision; abort\r\n    if (preventCollision && collisions.length) {\r\n        log(`Collision prevented on ${l.id}, reverting.`);\r\n        l.x = oldX;\r\n        l.y = oldY;\r\n        l.moved = false;\r\n        return layout;\r\n    }\r\n\r\n    // Move each item that collides away from this element.\r\n    for (let i = 0, len = collisions.length; i < len; i++) {\r\n        const collision = collisions[i];\r\n        log(\r\n            `Resolving collision between ${l.id} at [${l.x},${l.y}] and ${\r\n                collision.id\r\n            } at [${collision.x},${collision.y}]`,\r\n        );\r\n\r\n        // Short circuit so we can't infinite loop\r\n        if (collision.moved) {\r\n            continue;\r\n        }\r\n\r\n        // Don't move static items - we have to move *this* element away\r\n        if (collision.static) {\r\n            layout = moveElementAwayFromCollision(\r\n                layout,\r\n                collision,\r\n                l,\r\n                isUserAction,\r\n                compactType,\r\n                cols,\r\n            );\r\n        } else {\r\n            layout = moveElementAwayFromCollision(\r\n                layout,\r\n                l,\r\n                collision,\r\n                isUserAction,\r\n                compactType,\r\n                cols,\r\n            );\r\n        }\r\n    }\r\n\r\n    return layout;\r\n}\r\n\r\n/**\r\n * This is where the magic needs to happen - given a collision, move an element away from the collision.\r\n * We attempt to move it up if there's room, otherwise it goes below.\r\n *\r\n * @param  {Array} layout            Full layout to modify.\r\n * @param  {LayoutItem} collidesWith Layout item we're colliding with.\r\n * @param  {LayoutItem} itemToMove   Layout item we're moving.\r\n */\r\nexport function moveElementAwayFromCollision(\r\n    layout: Layout,\r\n    collidesWith: LayoutItem,\r\n    itemToMove: LayoutItem,\r\n    isUserAction: boolean | null | undefined,\r\n    compactType: CompactType,\r\n    cols: number,\r\n): Layout {\r\n    const compactH = compactType === 'horizontal';\r\n    // Compact vertically if not set to horizontal\r\n    const compactV = compactType !== 'horizontal';\r\n    const preventCollision = collidesWith.static; // we're already colliding (not for static items)\r\n\r\n    // If there is enough space above the collision to put this element, move it there.\r\n    // We only do this on the main collision as this can get funky in cascades and cause\r\n    // unwanted swapping behavior.\r\n    if (isUserAction) {\r\n        // Reset isUserAction flag because we're not in the main collision anymore.\r\n        isUserAction = false;\r\n\r\n        // Make a mock item so we don't modify the item here, only modify in moveElement.\r\n        const fakeItem: LayoutItem = {\r\n            x: compactH\r\n                ? Math.max(collidesWith.x - itemToMove.w, 0)\r\n                : itemToMove.x,\r\n            y: compactV\r\n                ? Math.max(collidesWith.y - itemToMove.h, 0)\r\n                : itemToMove.y,\r\n            w: itemToMove.w,\r\n            h: itemToMove.h,\r\n            id: '-1',\r\n        };\r\n\r\n        // No collision? If so, we can go up there; otherwise, we'll end up moving down as normal\r\n        if (!getFirstCollision(layout, fakeItem)) {\r\n            log(\r\n                `Doing reverse collision on ${itemToMove.id} up to [${\r\n                    fakeItem.x\r\n                },${fakeItem.y}].`,\r\n            );\r\n            return moveElement(\r\n                layout,\r\n                itemToMove,\r\n                compactH ? fakeItem.x : undefined,\r\n                compactV ? fakeItem.y : undefined,\r\n                isUserAction,\r\n                preventCollision,\r\n                compactType,\r\n                cols,\r\n            );\r\n        }\r\n    }\r\n\r\n    return moveElement(\r\n        layout,\r\n        itemToMove,\r\n        compactH ? itemToMove.x + 1 : undefined,\r\n        compactV ? itemToMove.y + 1 : undefined,\r\n        isUserAction,\r\n        preventCollision,\r\n        compactType,\r\n        cols,\r\n    );\r\n}\r\n\r\n/**\r\n * Helper to convert a number to a percentage string.\r\n *\r\n * @param  {Number} num Any number\r\n * @return {String}     That number as a percentage.\r\n */\r\nexport function perc(num: number): string {\r\n    return num * 100 + '%';\r\n}\r\n\r\nexport function setTransform({top, left, width, height}: Position): Object {\r\n    // Replace unitless items with px\r\n    const translate = `translate(${left}px,${top}px)`;\r\n    return {\r\n        transform: translate,\r\n        WebkitTransform: translate,\r\n        MozTransform: translate,\r\n        msTransform: translate,\r\n        OTransform: translate,\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        position: 'absolute',\r\n    };\r\n}\r\n\r\nexport function setTopLeft({top, left, width, height}: Position): Object {\r\n    return {\r\n        top: `${top}px`,\r\n        left: `${left}px`,\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        position: 'absolute',\r\n    };\r\n}\r\n\r\n/**\r\n * Get layout items sorted from top left to right and down.\r\n *\r\n * @return {Array} Array of layout objects.\r\n * @return {Array}        Layout, sorted static items first.\r\n */\r\nexport function sortLayoutItems(\r\n    layout: Layout,\r\n    compactType: CompactType,\r\n): Layout {\r\n    if (compactType === 'horizontal') {\r\n        return sortLayoutItemsByColRow(layout);\r\n    } else {\r\n        return sortLayoutItemsByRowCol(layout);\r\n    }\r\n}\r\n\r\nexport function sortLayoutItemsByRowCol(layout: Layout): Layout {\r\n    return ([] as any[]).concat(layout).sort(function(a, b) {\r\n        if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n            return 1;\r\n        } else if (a.y === b.y && a.x === b.x) {\r\n            // Without this, we can get different sort results in IE vs. Chrome/FF\r\n            return 0;\r\n        }\r\n        return -1;\r\n    });\r\n}\r\n\r\nexport function sortLayoutItemsByColRow(layout: Layout): Layout {\r\n    return ([] as any[]).concat(layout).sort(function(a, b) {\r\n        if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n            return 1;\r\n        }\r\n        return -1;\r\n    });\r\n}\r\n\r\n/**\r\n * Validate a layout. Throws errors.\r\n *\r\n * @param  {Array}  layout        Array of layout items.\r\n * @param  {String} [contextName] Context name for errors.\r\n * @throw  {Error}                Validation error.\r\n */\r\nexport function validateLayout(\r\n    layout: Layout,\r\n    contextName: string = 'Layout',\r\n): void {\r\n    const subProps = ['x', 'y', 'w', 'h'];\r\n    if (!Array.isArray(layout)) {\r\n        throw new Error(contextName + ' must be an array!');\r\n    }\r\n    for (let i = 0, len = layout.length; i < len; i++) {\r\n        const item = layout[i];\r\n        for (let j = 0; j < subProps.length; j++) {\r\n            if (typeof item[subProps[j]] !== 'number') {\r\n                throw new Error(\r\n                    'ReactGridLayout: ' +\r\n                    contextName +\r\n                    '[' +\r\n                    i +\r\n                    '].' +\r\n                    subProps[j] +\r\n                    ' must be a number!',\r\n                );\r\n            }\r\n        }\r\n        if (item.id && typeof item.id !== 'string') {\r\n            throw new Error(\r\n                'ReactGridLayout: ' +\r\n                contextName +\r\n                '[' +\r\n                i +\r\n                '].i must be a string!',\r\n            );\r\n        }\r\n        if (item.static !== undefined && typeof item.static !== 'boolean') {\r\n            throw new Error(\r\n                'ReactGridLayout: ' +\r\n                contextName +\r\n                '[' +\r\n                i +\r\n                '].static must be a boolean!',\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n// Flow can't really figure this out, so we just use Object\r\nexport function autoBindHandlers(el: Object, fns: Array<string>): void {\r\n    fns.forEach(key => (el[key] = el[key].bind(el)));\r\n}\r\n\r\nfunction log(...args) {\r\n    if (!DEBUG) {\r\n        return;\r\n    }\r\n    // eslint-disable-next-line no-console\r\n    console.log(...args);\r\n}\r\n\r\nexport const noop = () => {};\r\n","/** Cached result of whether the user's browser supports passive event listeners. */\r\nlet supportsPassiveEvents: boolean;\r\n\r\n/**\r\n * Checks whether the user's browser supports passive event listeners.\r\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n */\r\nexport function ktdSupportsPassiveEventListeners(): boolean {\r\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\r\n        try {\r\n            window.addEventListener('test', null!, Object.defineProperty({}, 'passive', {\r\n                get: () => supportsPassiveEvents = true\r\n            }));\r\n        } finally {\r\n            supportsPassiveEvents = supportsPassiveEvents || false;\r\n        }\r\n    }\r\n\r\n    return supportsPassiveEvents;\r\n}\r\n\r\n/**\r\n * Normalizes an `AddEventListener` object to something that can be passed\r\n * to `addEventListener` on any browser, no matter whether it supports the\r\n * `options` parameter.\r\n * @param options Object to be normalized.\r\n */\r\nexport function ktdNormalizePassiveListenerOptions(options: AddEventListenerOptions):\r\n    AddEventListenerOptions | boolean {\r\n    return ktdSupportsPassiveEventListeners() ? options : !!options.capture;\r\n}\r\n","import { fromEvent, iif, merge, Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ktdNormalizePassiveListenerOptions } from './passive-listeners';\r\n\r\n/** Options that can be used to bind a passive event listener. */\r\nconst passiveEventListenerOptions = ktdNormalizePassiveListenerOptions({passive: true});\r\n\r\n/** Options that can be used to bind an active event listener. */\r\nconst activeEventListenerOptions = ktdNormalizePassiveListenerOptions({passive: false});\r\n\r\nlet isMobile: boolean | null = null;\r\n\r\nexport function ktdIsMobileOrTablet(): boolean {\r\n\r\n    if (isMobile != null) {\r\n        return isMobile;\r\n    }\r\n\r\n    // Generic match pattern to identify mobile or tablet devices\r\n    const isMobileDevice = /Android|webOS|BlackBerry|Windows Phone|iPad|iPhone|iPod/i.test(navigator.userAgent);\r\n\r\n    // Since IOS 13 is not safe to just check for the generic solution. See: https://stackoverflow.com/questions/58019463/how-to-detect-device-name-in-safari-on-ios-13-while-it-doesnt-show-the-correct\r\n    const isIOSMobileDevice = /iPad|iPhone|iPod/.test(navigator.platform) || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\r\n\r\n    isMobile = isMobileDevice || isIOSMobileDevice;\r\n\r\n    return isMobile;\r\n}\r\n\r\nexport function ktdIsMouseEvent(event: any): event is MouseEvent {\r\n    return (event as MouseEvent).clientX != null;\r\n}\r\n\r\nexport function ktdIsTouchEvent(event: any): event is TouchEvent {\r\n    return (event as TouchEvent).touches != null && (event as TouchEvent).touches.length != null;\r\n}\r\n\r\nexport function ktdPointerClientX(event: MouseEvent | TouchEvent): number {\r\n    return ktdIsMouseEvent(event) ? event.clientX : event.touches[0].clientX;\r\n}\r\n\r\nexport function ktdPointerClientY(event: MouseEvent | TouchEvent): number {\r\n    return ktdIsMouseEvent(event) ? event.clientY : event.touches[0].clientY;\r\n}\r\n\r\nexport function ktdPointerClient(event: MouseEvent | TouchEvent): {clientX: number, clientY: number} {\r\n    return  {\r\n        clientX: ktdIsMouseEvent(event) ? event.clientX : event.touches[0].clientX,\r\n        clientY: ktdIsMouseEvent(event) ? event.clientY : event.touches[0].clientY\r\n    };\r\n}\r\n\r\n/**\r\n * Emits when a mousedown or touchstart emits. Avoids conflicts between both events.\r\n * @param element, html element where to  listen the events.\r\n * @param touchNumber number of the touch to track the event, default to the first one.\r\n */\r\nexport function ktdMouseOrTouchDown(element, touchNumber = 1): Observable<MouseEvent | TouchEvent> {\r\n    return iif(\r\n        () => ktdIsMobileOrTablet(),\r\n        fromEvent<TouchEvent>(element, 'touchstart', passiveEventListenerOptions as AddEventListenerOptions).pipe(\r\n            filter((touchEvent) => touchEvent.touches.length === touchNumber)\r\n        ),\r\n        fromEvent<MouseEvent>(element, 'mousedown', activeEventListenerOptions as AddEventListenerOptions).pipe(\r\n            filter((mouseEvent: MouseEvent) => {\r\n                /**\r\n                 * 0 : Left mouse button\r\n                 * 1 : Wheel button or middle button (if present)\r\n                 * 2 : Right mouse button\r\n                 */\r\n                return mouseEvent.button === 0; // Mouse down to be only fired if is left click\r\n            })\r\n        )\r\n    );\r\n}\r\n\r\n/**\r\n * Emits when a 'mousemove' or a 'touchmove' event gets fired.\r\n * @param element, html element where to  listen the events.\r\n * @param touchNumber number of the touch to track the event, default to the first one.\r\n */\r\nexport function ktdMouseOrTouchMove(element, touchNumber = 1): Observable<MouseEvent | TouchEvent> {\r\n    return iif(\r\n        () => ktdIsMobileOrTablet(),\r\n        fromEvent<TouchEvent>(element, 'touchmove', activeEventListenerOptions as AddEventListenerOptions).pipe(\r\n            filter((touchEvent) => touchEvent.touches.length === touchNumber),\r\n        ),\r\n        fromEvent<MouseEvent>(element, 'mousemove', activeEventListenerOptions as AddEventListenerOptions)\r\n    );\r\n}\r\n\r\nexport function ktdTouchEnd(element, touchNumber = 1): Observable<TouchEvent> {\r\n    return merge(\r\n        fromEvent<TouchEvent>(element, 'touchend').pipe(\r\n            filter((touchEvent) => touchEvent.touches.length === touchNumber - 1)\r\n        ),\r\n        fromEvent<TouchEvent>(element, 'touchcancel').pipe(\r\n            filter((touchEvent) => touchEvent.touches.length === touchNumber - 1)\r\n        )\r\n    );\r\n}\r\n\r\n/**\r\n * Emits when a there is a 'mouseup' or the touch ends.\r\n * @param element, html element where to  listen the events.\r\n * @param touchNumber number of the touch to track the event, default to the first one.\r\n */\r\nexport function ktdMouseOrTouchEnd(element, touchNumber = 1): Observable<MouseEvent | TouchEvent> {\r\n    return iif(\r\n        () => ktdIsMobileOrTablet(),\r\n        ktdTouchEnd(element, touchNumber),\r\n        fromEvent<MouseEvent>(element, 'mouseup'),\r\n    );\r\n}\r\n","import { compact, CompactType, getFirstCollision, Layout, LayoutItem, moveElement } from './react-grid-layout.utils';\r\nimport {\r\n    KtdDraggingData, KtdGridCfg, KtdGridCompactType, KtdGridItemRect, KtdGridItemRenderData, KtdGridLayout, KtdGridLayoutItem\r\n} from '../grid.definitions';\r\nimport { ktdPointerClientX, ktdPointerClientY } from './pointer.utils';\r\nimport { KtdDictionary } from '../../types';\r\nimport { KtdGridItemComponent } from '../grid-item/grid-item.component';\r\n\r\n/** Tracks items by id. This function is mean to be used in conjunction with the ngFor that renders the 'ktd-grid-items' */\r\nexport function ktdTrackById(index: number, item: {id: string}) {\r\n    return item.id;\r\n}\r\n\r\n/** Given a layout, the gridHeight and the gap return the resulting rowHeight */\r\nexport function ktdGetGridItemRowHeight(layout: KtdGridLayout, gridHeight: number, gap: number): number {\r\n    const numberOfRows = layout.reduce((acc, cur) => Math.max(acc, Math.max(cur.y + cur.h, 0)), 0);\r\n    const gapTotalHeight = (numberOfRows - 1) * gap;\r\n    const gridHeightMinusGap = gridHeight - gapTotalHeight;\r\n    return gridHeightMinusGap / numberOfRows;\r\n}\r\n\r\n/**\r\n * Call react-grid-layout utils 'compact()' function and return the compacted layout.\r\n * @param layout to be compacted.\r\n * @param compactType, type of compaction.\r\n * @param cols, number of columns of the grid.\r\n */\r\nexport function ktdGridCompact(layout: KtdGridLayout, compactType: KtdGridCompactType, cols: number): KtdGridLayout {\r\n    return compact(layout, compactType, cols)\r\n        // Prune react-grid-layout compact extra properties.\r\n        .map(item => ({ id: item.id, x: item.x, y: item.y, w: item.w, h: item.h, minW: item.minW, minH: item.minH, maxW: item.maxW, maxH: item.maxH }));\r\n}\r\n\r\nfunction screenXToGridX(screenXPos: number, cols: number, width: number, gap: number): number {\r\n    const widthMinusGaps = width - (gap * (cols - 1));\r\n    const itemWidth = widthMinusGaps / cols;\r\n    const widthMinusOneItem = width - itemWidth;\r\n    const colWidthWithGap = widthMinusOneItem / (cols - 1);\r\n    return Math.round(screenXPos / colWidthWithGap);\r\n}\r\n\r\nfunction screenYToGridY(screenYPos: number, rowHeight: number, height: number, gap: number): number {\r\n    return Math.round(screenYPos / (rowHeight + gap));\r\n}\r\n\r\nfunction screenWidthToGridWidth(gridScreenWidth: number, cols: number, width: number, gap: number): number {\r\n    const widthMinusGaps = width - (gap * (cols - 1));\r\n    const itemWidth = widthMinusGaps / cols;\r\n    const gridScreenWidthMinusFirst = gridScreenWidth - itemWidth;\r\n    return Math.round(gridScreenWidthMinusFirst / (itemWidth + gap)) + 1;\r\n}\r\n\r\nfunction screenHeightToGridHeight(gridScreenHeight: number, rowHeight: number, height: number, gap: number): number {\r\n    const gridScreenHeightMinusFirst = gridScreenHeight - rowHeight;\r\n    return Math.round(gridScreenHeightMinusFirst / (rowHeight + gap)) + 1;\r\n}\r\n\r\n/** Returns a Dictionary where the key is the id and the value is the change applied to that item. If no changes Dictionary is empty. */\r\nexport function ktdGetGridLayoutDiff(gridLayoutA: KtdGridLayoutItem[], gridLayoutB: KtdGridLayoutItem[]): KtdDictionary<{ change: 'move' | 'resize' | 'moveresize' }> {\r\n    const diff: KtdDictionary<{ change: 'move' | 'resize' | 'moveresize' }> = {};\r\n\r\n    gridLayoutA.forEach(itemA => {\r\n        const itemB = gridLayoutB.find(_itemB => _itemB.id === itemA.id);\r\n        if (itemB != null) {\r\n            const posChanged = itemA.x !== itemB.x || itemA.y !== itemB.y;\r\n            const sizeChanged = itemA.w !== itemB.w || itemA.h !== itemB.h;\r\n            const change: 'move' | 'resize' | 'moveresize' | null = posChanged && sizeChanged ? 'moveresize' : posChanged ? 'move' : sizeChanged ? 'resize' : null;\r\n            if (change) {\r\n                diff[itemB.id] = {change};\r\n            }\r\n        }\r\n    });\r\n    return diff;\r\n}\r\n\r\n/**\r\n * Given the grid config & layout data and the current drag position & information, returns the corresponding layout and drag item position\r\n * @param gridItem grid item that is been dragged\r\n * @param config current grid configuration\r\n * @param compactionType type of compaction that will be performed\r\n * @param draggingData contains all the information about the drag\r\n */\r\nexport function ktdGridItemDragging(gridItem: KtdGridItemComponent, config: KtdGridCfg, compactionType: CompactType, draggingData: KtdDraggingData): { layout: KtdGridLayoutItem[]; draggedItemPos: KtdGridItemRect } {\r\n    const {pointerDownEvent, pointerDragEvent, gridElemClientRect, dragElemClientRect, scrollDifference} = draggingData;\r\n\r\n    const gridItemId = gridItem.id;\r\n\r\n    const draggingElemPrevItem = config.layout.find(item => item.id === gridItemId)!;\r\n\r\n    const clientStartX = ktdPointerClientX(pointerDownEvent);\r\n    const clientStartY = ktdPointerClientY(pointerDownEvent);\r\n    const clientX = ktdPointerClientX(pointerDragEvent);\r\n    const clientY = ktdPointerClientY(pointerDragEvent);\r\n\r\n    const offsetX = clientStartX - dragElemClientRect.left;\r\n    const offsetY = clientStartY - dragElemClientRect.top;\r\n\r\n    // Grid element positions taking into account the possible scroll total difference from the beginning.\r\n    const gridElementLeftPosition = gridElemClientRect.left + scrollDifference.left;\r\n    const gridElementTopPosition = gridElemClientRect.top + scrollDifference.top;\r\n\r\n    // Calculate position relative to the grid element.\r\n    const gridRelXPos = clientX - gridElementLeftPosition - offsetX;\r\n    const gridRelYPos = clientY - gridElementTopPosition - offsetY;\r\n\r\n    const rowHeightInPixels = config.rowHeight === 'fit'\r\n        ? ktdGetGridItemRowHeight(config.layout, config.height ?? gridElemClientRect.height, config.gap)\r\n        : config.rowHeight;\r\n\r\n    // Get layout item position\r\n    const layoutItem: KtdGridLayoutItem = {\r\n        ...draggingElemPrevItem,\r\n        x: screenXToGridX(gridRelXPos , config.cols, gridElemClientRect.width, config.gap),\r\n        y: screenYToGridY(gridRelYPos, rowHeightInPixels, gridElemClientRect.height, config.gap)\r\n    };\r\n\r\n    // Correct the values if they overflow, since 'moveElement' function doesn't do it\r\n    layoutItem.x = Math.max(0, layoutItem.x);\r\n    layoutItem.y = Math.max(0, layoutItem.y);\r\n    if (layoutItem.x + layoutItem.w > config.cols) {\r\n        layoutItem.x = Math.max(0, config.cols - layoutItem.w);\r\n    }\r\n\r\n    // Parse to LayoutItem array data in order to use 'react.grid-layout' utils\r\n    const layoutItems: LayoutItem[] = config.layout;\r\n    const draggedLayoutItem: LayoutItem = layoutItems.find(item => item.id === gridItemId)!;\r\n\r\n    let newLayoutItems: LayoutItem[] = moveElement(\r\n        layoutItems,\r\n        draggedLayoutItem,\r\n        layoutItem.x,\r\n        layoutItem.y,\r\n        true,\r\n        config.preventCollision,\r\n        compactionType,\r\n        config.cols\r\n    );\r\n\r\n    newLayoutItems = compact(newLayoutItems, compactionType, config.cols);\r\n\r\n    return {\r\n        layout: newLayoutItems,\r\n        draggedItemPos: {\r\n            top: gridRelYPos,\r\n            left: gridRelXPos,\r\n            width: dragElemClientRect.width,\r\n            height: dragElemClientRect.height,\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Given the grid config & layout data and the current drag position & information, returns the corresponding layout and drag item position\r\n * @param gridItem grid item that is been dragged\r\n * @param config current grid configuration\r\n * @param compactionType type of compaction that will be performed\r\n * @param draggingData contains all the information about the drag\r\n */\r\nexport function ktdGridItemResizing(gridItem: KtdGridItemComponent, config: KtdGridCfg, compactionType: CompactType, draggingData: KtdDraggingData): { layout: KtdGridLayoutItem[]; draggedItemPos: KtdGridItemRect } {\r\n    const {pointerDownEvent, pointerDragEvent, gridElemClientRect, dragElemClientRect, scrollDifference} = draggingData;\r\n    const gridItemId = gridItem.id;\r\n\r\n    const clientStartX = ktdPointerClientX(pointerDownEvent);\r\n    const clientStartY = ktdPointerClientY(pointerDownEvent);\r\n    const clientX = ktdPointerClientX(pointerDragEvent);\r\n    const clientY = ktdPointerClientY(pointerDragEvent);\r\n\r\n    // Get the difference between the mouseDown and the position 'right' of the resize element.\r\n    const resizeElemOffsetX = dragElemClientRect.width - (clientStartX - dragElemClientRect.left);\r\n    const resizeElemOffsetY = dragElemClientRect.height - (clientStartY - dragElemClientRect.top);\r\n\r\n    const draggingElemPrevItem = config.layout.find(item => item.id === gridItemId)!;\r\n    const width = clientX + resizeElemOffsetX - (dragElemClientRect.left + scrollDifference.left);\r\n    const height = clientY + resizeElemOffsetY - (dragElemClientRect.top + scrollDifference.top);\r\n\r\n    const rowHeightInPixels = config.rowHeight === 'fit'\r\n        ? ktdGetGridItemRowHeight(config.layout, config.height ?? gridElemClientRect.height, config.gap)\r\n        : config.rowHeight;\r\n\r\n    // Get layout item grid position\r\n    const layoutItem: KtdGridLayoutItem = {\r\n        ...draggingElemPrevItem,\r\n        w: screenWidthToGridWidth(width, config.cols, gridElemClientRect.width, config.gap),\r\n        h: screenHeightToGridHeight(height, rowHeightInPixels, gridElemClientRect.height, config.gap)\r\n    };\r\n\r\n    layoutItem.w = limitNumberWithinRange(layoutItem.w, gridItem.minW ?? layoutItem.minW, gridItem.maxW ?? layoutItem.maxW);\r\n    layoutItem.h = limitNumberWithinRange(layoutItem.h, gridItem.minH ?? layoutItem.minH, gridItem.maxH ?? layoutItem.maxH);\r\n\r\n    if (layoutItem.x + layoutItem.w > config.cols) {\r\n        layoutItem.w = Math.max(1, config.cols - layoutItem.x);\r\n    }\r\n\r\n    if (config.preventCollision) {\r\n        const maxW = layoutItem.w;\r\n        const maxH = layoutItem.h;\r\n\r\n        let colliding = hasCollision(config.layout, layoutItem);\r\n        let shrunkDimension: 'w' | 'h' | undefined;\r\n\r\n        while (colliding) {\r\n            shrunkDimension = getDimensionToShrink(layoutItem, shrunkDimension);\r\n            layoutItem[shrunkDimension]--;\r\n            colliding = hasCollision(config.layout, layoutItem);\r\n        }\r\n\r\n        if (shrunkDimension === 'w') {\r\n            layoutItem.h = maxH;\r\n\r\n            colliding = hasCollision(config.layout, layoutItem);\r\n            while (colliding) {\r\n                layoutItem.h--;\r\n                colliding = hasCollision(config.layout, layoutItem);\r\n            }\r\n        }\r\n        if (shrunkDimension === 'h') {\r\n            layoutItem.w = maxW;\r\n\r\n            colliding = hasCollision(config.layout, layoutItem);\r\n            while (colliding) {\r\n                layoutItem.w--;\r\n                colliding = hasCollision(config.layout, layoutItem);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const newLayoutItems: LayoutItem[] = config.layout.map((item) => {\r\n        return item.id === gridItemId ? layoutItem : item;\r\n    });\r\n\r\n    return {\r\n        layout: compact(newLayoutItems, compactionType, config.cols),\r\n        draggedItemPos: {\r\n            top: dragElemClientRect.top - gridElemClientRect.top,\r\n            left: dragElemClientRect.left - gridElemClientRect.left,\r\n            width,\r\n            height,\r\n        }\r\n    };\r\n}\r\n\r\nfunction hasCollision(layout: Layout, layoutItem: LayoutItem): boolean {\r\n    return !!getFirstCollision(layout, layoutItem);\r\n}\r\n\r\nfunction getDimensionToShrink(layoutItem, lastShrunk): 'w' | 'h' {\r\n    if (layoutItem.h <= 1) {\r\n        return 'w';\r\n    }\r\n    if (layoutItem.w <= 1) {\r\n        return 'h';\r\n    }\r\n\r\n    return lastShrunk === 'w' ? 'h' : 'w';\r\n}\r\n\r\n/**\r\n * Given the current number and min/max values, returns the number within the range\r\n * @param number can be any numeric value\r\n * @param min minimum value of range\r\n * @param max maximum value of range\r\n */\r\nfunction limitNumberWithinRange(num: number, min: number = 1, max: number = Infinity) {\r\n    return Math.min(Math.max(num, min < 1 ? 1 : min), max);\r\n}\r\n\r\n/** Returns true if both item1 and item2 KtdGridLayoutItems are equivalent. */\r\nexport function ktdGridItemLayoutItemAreEqual(item1: KtdGridLayoutItem, item2: KtdGridLayoutItem): boolean {\r\n    return item1.id === item2.id\r\n        && item1.x === item2.x\r\n        && item1.y === item2.y\r\n        && item1.w === item2.w\r\n        && item1.h === item2.h\r\n}\r\n","import { Directive, ElementRef, InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `KtdGridDragHandle`. It serves as\r\n * alternative token to the actual `KtdGridDragHandle` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const KTD_GRID_DRAG_HANDLE = new InjectionToken<KtdGridDragHandle>('KtdGridDragHandle');\r\n\r\n/** Handle that can be used to drag a KtdGridItem instance. */\r\n@Directive({\r\n    selector: '[ktdGridDragHandle]',\r\n    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n    host: {\r\n        class: 'ktd-grid-drag-handle'\r\n    },\r\n    providers: [{provide: KTD_GRID_DRAG_HANDLE, useExisting: KtdGridDragHandle}],\r\n})\r\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\r\nexport class KtdGridDragHandle {\r\n    constructor(\r\n        public element: ElementRef<HTMLElement>) {\r\n    }\r\n}\r\n","import { Directive, ElementRef, InjectionToken, } from '@angular/core';\r\n\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `KtdGridResizeHandle`. It serves as\r\n * alternative token to the actual `KtdGridResizeHandle` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const KTD_GRID_RESIZE_HANDLE = new InjectionToken<KtdGridResizeHandle>('KtdGridResizeHandle');\r\n\r\n/** Handle that can be used to drag a KtdGridItem instance. */\r\n@Directive({\r\n    selector: '[ktdGridResizeHandle]',\r\n    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n    host: {\r\n        class: 'ktd-grid-resize-handle'\r\n    },\r\n    providers: [{provide: KTD_GRID_RESIZE_HANDLE, useExisting: KtdGridResizeHandle}],\r\n})\r\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\r\nexport class KtdGridResizeHandle {\r\n\r\n    constructor(\r\n        public element: ElementRef<HTMLElement>) {\r\n    }\r\n}\r\n","import { Directive, InjectionToken, Input, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `KtdGridItemPlaceholder`. It serves as\r\n * alternative token to the actual `KtdGridItemPlaceholder` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nexport const KTD_GRID_ITEM_PLACEHOLDER = new InjectionToken<KtdGridItemPlaceholder>('KtdGridItemPlaceholder');\r\n\r\n/** Directive that can be used to create a custom placeholder for a KtdGridItem instance. */\r\n@Directive({\r\n    selector: 'ng-template[ktdGridItemPlaceholder]',\r\n    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n    host: {\r\n        class: 'ktd-grid-item-placeholder-content'\r\n    },\r\n    providers: [{provide: KTD_GRID_ITEM_PLACEHOLDER, useExisting: KtdGridItemPlaceholder}],\r\n})\r\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\r\nexport class KtdGridItemPlaceholder<T = any> {\r\n    /** Context data to be added to the placeholder template instance. */\r\n    @Input() data: T;\r\n    constructor(public templateRef: TemplateRef<T>) {}\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { CompactType } from './utils/react-grid-layout.utils';\r\nimport { KtdClientRect } from './utils/client-rect';\r\n\r\nexport interface KtdGridLayoutItem {\r\n    id: string;\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n    minW?: number;\r\n    minH?: number;\r\n    maxW?: number;\r\n    maxH?: number;\r\n}\r\n\r\nexport type KtdGridCompactType = CompactType;\r\n\r\nexport interface KtdGridCfg {\r\n    cols: number;\r\n    rowHeight: number | 'fit'; // row height in pixels\r\n    height?: number | null;\r\n    layout: KtdGridLayoutItem[];\r\n    preventCollision: boolean;\r\n    gap: number;\r\n}\r\n\r\nexport type KtdGridLayout = KtdGridLayoutItem[];\r\n\r\n// TODO: Remove this interface. If can't remove, move and rename this interface in the core module or similar.\r\nexport interface KtdGridItemRect {\r\n    top: number;\r\n    left: number;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface KtdGridItemRenderData<T = number | string> {\r\n    id: string;\r\n    top: T;\r\n    left: T;\r\n    width: T;\r\n    height: T;\r\n}\r\n\r\n/**\r\n * We inject a token because of the 'circular dependency issue warning'. In case we don't had this issue with the circular dependency, we could just\r\n * import KtdGridComponent on KtdGridItem and execute the needed function to get the rendering data.\r\n */\r\nexport type KtdGridItemRenderDataTokenType = (id: string) => KtdGridItemRenderData<string>;\r\nexport const GRID_ITEM_GET_RENDER_DATA_TOKEN: InjectionToken<KtdGridItemRenderDataTokenType> = new InjectionToken('GRID_ITEM_GET_RENDER_DATA_TOKEN');\r\n\r\nexport interface KtdDraggingData {\r\n    pointerDownEvent: MouseEvent | TouchEvent;\r\n    pointerDragEvent: MouseEvent | TouchEvent;\r\n    gridElemClientRect: KtdClientRect;\r\n    dragElemClientRect: KtdClientRect;\r\n    scrollDifference: { top: number, left: number };\r\n}\r\n","import { NgZone } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n/** Runs source observable outside the zone */\r\nexport function ktdOutsideZone<T>(zone: NgZone) {\r\n    return (source: Observable<T>) => {\r\n        return new Observable<T>(observer => {\r\n            return zone.runOutsideAngular<Subscription>(() => source.subscribe(observer));\r\n        });\r\n    };\r\n}\r\n\r\n\r\n/** Rxjs operator that makes source observable to no emit any data */\r\nexport function ktdNoEmit() {\r\n    return (source$: Observable<any>): Observable<any> => {\r\n        return source$.pipe(filter(() => false));\r\n    };\r\n}\r\n","/* eslint-disable */\r\n/**\r\n * Type describing the allowed values for a boolean input.\r\n * @docs-private\r\n */\r\nexport type BooleanInput = string | boolean | null | undefined;\r\n\r\n/** Coerces a data-bound value (typically a string) to a boolean. */\r\nexport function coerceBooleanProperty(value: any): boolean {\r\n  return value != null && `${value}` !== 'false';\r\n}\r\n","/* eslint-disable */\r\nexport type NumberInput = string | number | null | undefined;\r\n\r\n/** Coerces a data-bound value (typically a string) to a number. */\r\nexport function coerceNumberProperty(value: any): number;\r\nexport function coerceNumberProperty<D>(value: any, fallback: D): number | D;\r\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\r\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n\r\n/**\r\n * Whether the provided value is considered a number.\r\n * @docs-private\r\n */\r\nexport function _isNumberValue(value: any): boolean {\r\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n    return !isNaN(parseFloat(value as any)) && !isNaN(Number(value));\r\n}\r\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { ktdNormalizePassiveListenerOptions } from './utils/passive-listeners';\r\nimport { fromEvent, iif, Observable, Subject, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ktdIsMobileOrTablet } from './utils/pointer.utils';\r\n\r\n/** Event options that can be used to bind an active, capturing event. */\r\nconst activeCapturingEventOptions = ktdNormalizePassiveListenerOptions({\r\n    passive: false,\r\n    capture: true\r\n});\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class KtdGridService implements OnDestroy {\r\n\r\n    touchMove$: Observable<TouchEvent>;\r\n    private touchMoveSubject: Subject<TouchEvent> = new Subject<TouchEvent>();\r\n    private touchMoveSubscription: Subscription;\r\n\r\n    constructor(private ngZone: NgZone) {\r\n        this.touchMove$ = this.touchMoveSubject.asObservable();\r\n        this.registerTouchMoveSubscription();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.touchMoveSubscription.unsubscribe();\r\n    }\r\n\r\n    mouseOrTouchMove$(element): Observable<MouseEvent | TouchEvent> {\r\n        return iif(\r\n            () => ktdIsMobileOrTablet(),\r\n            this.touchMove$,\r\n            fromEvent<MouseEvent>(element, 'mousemove', activeCapturingEventOptions as AddEventListenerOptions) // TODO: Fix rxjs typings, boolean should be a good param too.\r\n        );\r\n    }\r\n\r\n    private registerTouchMoveSubscription() {\r\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\r\n        // won't preventDefault on a dynamically-added `touchmove` listener.\r\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\r\n        this.touchMoveSubscription = this.ngZone.runOutsideAngular(() =>\r\n            // The event handler has to be explicitly active,\r\n            // because newer browsers make it passive by default.\r\n            fromEvent(document, 'touchmove', activeCapturingEventOptions as AddEventListenerOptions) // TODO: Fix rxjs typings, boolean should be a good param too.\r\n                .pipe(filter((touchEvent: TouchEvent) => touchEvent.touches.length === 1))\r\n                .subscribe((touchEvent: TouchEvent) => this.touchMoveSubject.next(touchEvent))\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, ContentChildren, ElementRef, Inject, Input, NgZone, OnDestroy, OnInit,\r\n    QueryList, Renderer2, ViewChild\r\n} from '@angular/core';\r\nimport { BehaviorSubject, iif, merge, NEVER, Observable, Subject, Subscription } from 'rxjs';\r\nimport { exhaustMap, filter, map, startWith, switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { ktdMouseOrTouchDown, ktdMouseOrTouchEnd, ktdPointerClient } from '../utils/pointer.utils';\r\nimport { GRID_ITEM_GET_RENDER_DATA_TOKEN, KtdGridItemRenderDataTokenType } from '../grid.definitions';\r\nimport { KTD_GRID_DRAG_HANDLE, KtdGridDragHandle } from '../directives/drag-handle';\r\nimport { KTD_GRID_RESIZE_HANDLE, KtdGridResizeHandle } from '../directives/resize-handle';\r\nimport { KtdGridService } from '../grid.service';\r\nimport { ktdOutsideZone } from '../utils/operators';\r\nimport { BooleanInput, coerceBooleanProperty } from '../coercion/boolean-property';\r\nimport { coerceNumberProperty, NumberInput } from '../coercion/number-property';\r\nimport { KTD_GRID_ITEM_PLACEHOLDER, KtdGridItemPlaceholder } from '../directives/placeholder';\r\n\r\n@Component({\r\n    selector: 'ktd-grid-item',\r\n    templateUrl: './grid-item.component.html',\r\n    styleUrls: ['./grid-item.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class KtdGridItemComponent implements OnInit, OnDestroy, AfterContentInit {\r\n    /** Elements that can be used to drag the grid item. */\r\n    @ContentChildren(KTD_GRID_DRAG_HANDLE, {descendants: true}) _dragHandles: QueryList<KtdGridDragHandle>;\r\n    @ContentChildren(KTD_GRID_RESIZE_HANDLE, {descendants: true}) _resizeHandles: QueryList<KtdGridResizeHandle>;\r\n    @ViewChild('resizeElem', {static: true, read: ElementRef}) resizeElem: ElementRef;\r\n\r\n    /** Template ref for placeholder */\r\n    @ContentChild(KTD_GRID_ITEM_PLACEHOLDER) placeholder: KtdGridItemPlaceholder;\r\n\r\n    /** Min and max size input properties. Any of these would 'override' the min/max values specified in the layout. */\r\n    @Input() minW?: number;\r\n    @Input() minH?: number;\r\n    @Input() maxW?: number;\r\n    @Input() maxH?: number;\r\n\r\n    /** CSS transition style. Note that for more performance is preferable only make transition on transform property. */\r\n    @Input() transition: string = 'transform 500ms ease, width 500ms ease, height 500ms ease';\r\n\r\n    dragStart$: Observable<MouseEvent | TouchEvent>;\r\n    resizeStart$: Observable<MouseEvent | TouchEvent>;\r\n\r\n    /** Id of the grid item. This property is strictly compulsory. */\r\n    @Input()\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    set id(val: string) {\r\n        this._id = val;\r\n    }\r\n\r\n    private _id: string;\r\n\r\n    /** Minimum amount of pixels that the user should move before it starts the drag sequence. */\r\n    @Input()\r\n    get dragStartThreshold(): number { return this._dragStartThreshold; }\r\n\r\n    set dragStartThreshold(val: number) {\r\n        this._dragStartThreshold = coerceNumberProperty(val);\r\n    }\r\n\r\n    private _dragStartThreshold: number = 0;\r\n\r\n\r\n    /** Whether the item is draggable or not. Defaults to true. */\r\n    @Input()\r\n    get draggable(): boolean {\r\n        return this._draggable;\r\n    }\r\n\r\n    set draggable(val: boolean) {\r\n        this._draggable = coerceBooleanProperty(val);\r\n        this._draggable$.next(this._draggable);\r\n    }\r\n\r\n    private _draggable: boolean = true;\r\n    private _draggable$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this._draggable);\r\n\r\n    /** Whether the item is resizable or not. Defaults to true. */\r\n    @Input()\r\n    get resizable(): boolean {\r\n        return this._resizable;\r\n    }\r\n\r\n    set resizable(val: boolean) {\r\n        this._resizable = coerceBooleanProperty(val);\r\n        this._resizable$.next(this._resizable);\r\n    }\r\n\r\n    private _resizable: boolean = true;\r\n    private _resizable$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this._resizable);\r\n\r\n    private dragStartSubject: Subject<MouseEvent | TouchEvent> = new Subject<MouseEvent | TouchEvent>();\r\n    private resizeStartSubject: Subject<MouseEvent | TouchEvent> = new Subject<MouseEvent | TouchEvent>();\r\n\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(public elementRef: ElementRef,\r\n                private gridService: KtdGridService,\r\n                private renderer: Renderer2,\r\n                private ngZone: NgZone,\r\n                @Inject(GRID_ITEM_GET_RENDER_DATA_TOKEN) private getItemRenderData: KtdGridItemRenderDataTokenType) {\r\n        this.dragStart$ = this.dragStartSubject.asObservable();\r\n        this.resizeStart$ = this.resizeStartSubject.asObservable();\r\n    }\r\n\r\n    ngOnInit() {\r\n        const gridItemRenderData = this.getItemRenderData(this.id)!;\r\n        this.setStyles(gridItemRenderData);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.subscriptions.push(\r\n            this._dragStart$().subscribe(this.dragStartSubject),\r\n            this._resizeStart$().subscribe(this.resizeStartSubject),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    setStyles({top, left, width, height}: { top: string, left: string, width?: string, height?: string }) {\r\n        // transform is 6x times faster than top/left\r\n        this.renderer.setStyle(this.elementRef.nativeElement, 'transform', `translateX(${left}) translateY(${top})`);\r\n        this.renderer.setStyle(this.elementRef.nativeElement, 'display', `block`);\r\n        this.renderer.setStyle(this.elementRef.nativeElement, 'transition', this.transition);\r\n        if (width != null) { this.renderer.setStyle(this.elementRef.nativeElement, 'width', width); }\r\n        if (height != null) {this.renderer.setStyle(this.elementRef.nativeElement, 'height', height); }\r\n    }\r\n\r\n    private _dragStart$(): Observable<MouseEvent | TouchEvent> {\r\n        return this._draggable$.pipe(\r\n            switchMap((draggable) => {\r\n                if (!draggable) {\r\n                    return NEVER;\r\n                } else {\r\n                    return this._dragHandles.changes.pipe(\r\n                        startWith(this._dragHandles),\r\n                        switchMap((dragHandles: QueryList<KtdGridDragHandle>) => {\r\n                            return iif(\r\n                                () => dragHandles.length > 0,\r\n                                merge(...dragHandles.toArray().map(dragHandle => ktdMouseOrTouchDown(dragHandle.element.nativeElement, 1))),\r\n                                ktdMouseOrTouchDown(this.elementRef.nativeElement, 1)\r\n                            ).pipe(\r\n                                exhaustMap((startEvent) => {\r\n                                    // If the event started from an element with the native HTML drag&drop, it'll interfere\r\n                                    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\r\n                                    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\r\n                                    // it's flaky and it fails if the user drags it away quickly. Also note that we only want\r\n                                    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\r\n                                    // events from firing on touch devices.\r\n                                    if (startEvent.target && (startEvent.target as HTMLElement).draggable && startEvent.type === 'mousedown') {\r\n                                        startEvent.preventDefault();\r\n                                    }\r\n\r\n                                    const startPointer = ktdPointerClient(startEvent);\r\n                                    return this.gridService.mouseOrTouchMove$(document).pipe(\r\n                                        takeUntil(ktdMouseOrTouchEnd(document, 1)),\r\n                                        ktdOutsideZone(this.ngZone),\r\n                                        filter((moveEvent) => {\r\n                                            moveEvent.preventDefault();\r\n                                            const movePointer = ktdPointerClient(moveEvent);\r\n                                            const distanceX = Math.abs(startPointer.clientX - movePointer.clientX);\r\n                                            const distanceY = Math.abs(startPointer.clientY - movePointer.clientY);\r\n                                            // When this conditions returns true mean that we are over threshold.\r\n                                            return distanceX + distanceY >= this.dragStartThreshold;\r\n                                        }),\r\n                                        take(1),\r\n                                        // Return the original start event\r\n                                        map(() => startEvent)\r\n                                    );\r\n                                })\r\n                            );\r\n                        })\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    private _resizeStart$(): Observable<MouseEvent | TouchEvent> {\r\n        return this._resizable$.pipe(\r\n            switchMap((resizable) => {\r\n                if (!resizable) {\r\n                    // Side effect to hide the resizeElem if resize is disabled.\r\n                    this.renderer.setStyle(this.resizeElem.nativeElement, 'display', 'none');\r\n                    return NEVER;\r\n                } else {\r\n                    return this._resizeHandles.changes.pipe(\r\n                        startWith(this._resizeHandles),\r\n                        switchMap((resizeHandles: QueryList<KtdGridResizeHandle>) => {\r\n                            if (resizeHandles.length > 0) {\r\n                                // Side effect to hide the resizeElem if there are resize handles.\r\n                                this.renderer.setStyle(this.resizeElem.nativeElement, 'display', 'none');\r\n                                return merge(...resizeHandles.toArray().map(resizeHandle => ktdMouseOrTouchDown(resizeHandle.element.nativeElement, 1)));\r\n                            } else {\r\n                                this.renderer.setStyle(this.resizeElem.nativeElement, 'display', 'block');\r\n                                return ktdMouseOrTouchDown(this.resizeElem.nativeElement, 1);\r\n                            }\r\n                        })\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n    static ngAcceptInputType_minW: NumberInput;\r\n    static ngAcceptInputType_minH: NumberInput;\r\n    static ngAcceptInputType_maxW: NumberInput;\r\n    static ngAcceptInputType_maxH: NumberInput;\r\n    static ngAcceptInputType_draggable: BooleanInput;\r\n    static ngAcceptInputType_resizable: BooleanInput;\r\n    static ngAcceptInputType_dragStartThreshold: NumberInput;\r\n\r\n}\r\n","<ng-content></ng-content>\r\n<div #resizeElem class=\"grid-item-resize-icon\"></div>","/**\r\n * Client rect utilities.\r\n * This file is taken from Angular Material repository.\r\n */\r\n\r\n/* eslint-disable */\r\n\r\nexport interface KtdClientRect {\r\n    top: number;\r\n    bottom: number;\r\n    left: number;\r\n    right: number;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\n/** Gets a mutable version of an element's bounding `ClientRect`. */\r\nexport function getMutableClientRect(element: Element): KtdClientRect {\r\n    const clientRect = element.getBoundingClientRect();\r\n\r\n    // We need to clone the `clientRect` here, because all the values on it are readonly\r\n    // and we need to be able to update them. Also we can't use a spread here, because\r\n    // the values on a `ClientRect` aren't own properties. See:\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\r\n    return {\r\n        top: clientRect.top,\r\n        right: clientRect.right,\r\n        bottom: clientRect.bottom,\r\n        left: clientRect.left,\r\n        width: clientRect.width,\r\n        height: clientRect.height\r\n    };\r\n}\r\n\r\n/**\r\n * Checks whether some coordinates are within a `ClientRect`.\r\n * @param clientRect ClientRect that is being checked.\r\n * @param x Coordinates along the X axis.\r\n * @param y Coordinates along the Y axis.\r\n */\r\nexport function isInsideClientRect(clientRect: ClientRect, x: number, y: number) {\r\n    const {top, bottom, left, right} = clientRect;\r\n    return y >= top && y <= bottom && x >= left && x <= right;\r\n}\r\n\r\n/**\r\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\r\n * @param clientRect `ClientRect` that should be updated.\r\n * @param top Amount to add to the `top` position.\r\n * @param left Amount to add to the `left` position.\r\n */\r\nexport function adjustClientRect(clientRect: KtdClientRect, top: number, left: number) {\r\n    clientRect.top += top;\r\n    clientRect.bottom = clientRect.top + clientRect.height;\r\n\r\n    clientRect.left += left;\r\n    clientRect.right = clientRect.left + clientRect.width;\r\n}\r\n\r\n/**\r\n * Checks whether the pointer coordinates are close to a ClientRect.\r\n * @param rect ClientRect to check against.\r\n * @param threshold Threshold around the ClientRect.\r\n * @param pointerX Coordinates along the X axis.\r\n * @param pointerY Coordinates along the Y axis.\r\n */\r\nexport function isPointerNearClientRect(rect: KtdClientRect,\r\n                                        threshold: number,\r\n                                        pointerX: number,\r\n                                        pointerY: number): boolean {\r\n    const {top, right, bottom, left, width, height} = rect;\r\n    const xThreshold = width * threshold;\r\n    const yThreshold = height * threshold;\r\n\r\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\r\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\r\n}\r\n","import { animationFrameScheduler, fromEvent, interval, NEVER, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { ktdNormalizePassiveListenerOptions } from './passive-listeners';\r\nimport { getMutableClientRect, KtdClientRect } from './client-rect';\r\nimport { ktdNoEmit } from './operators';\r\n\r\n/**\r\n * Proximity, as a ratio to width/height at which to start auto-scrolling.\r\n * The value comes from trying it out manually until it feels right.\r\n */\r\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\r\n\r\n/** Vertical direction in which we can auto-scroll. */\r\nconst enum AutoScrollVerticalDirection {NONE, UP, DOWN}\r\n\r\n/** Horizontal direction in which we can auto-scroll. */\r\nconst enum AutoScrollHorizontalDirection {NONE, LEFT, RIGHT}\r\n\r\nexport interface KtdScrollPosition {\r\n    top: number;\r\n    left: number;\r\n}\r\n\r\n\r\n/**\r\n * Increments the vertical scroll position of a node.\r\n * @param node Node whose scroll position should change.\r\n * @param amount Amount of pixels that the `node` should be scrolled.\r\n */\r\nfunction incrementVerticalScroll(node: HTMLElement | Window, amount: number) {\r\n    if (node === window) {\r\n        (node as Window).scrollBy(0, amount);\r\n    } else {\r\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\r\n        (node as HTMLElement).scrollTop += amount;\r\n    }\r\n}\r\n\r\n/**\r\n * Increments the horizontal scroll position of a node.\r\n * @param node Node whose scroll position should change.\r\n * @param amount Amount of pixels that the `node` should be scrolled.\r\n */\r\nfunction incrementHorizontalScroll(node: HTMLElement | Window, amount: number) {\r\n    if (node === window) {\r\n        (node as Window).scrollBy(amount, 0);\r\n    } else {\r\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\r\n        (node as HTMLElement).scrollLeft += amount;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Gets whether the vertical auto-scroll direction of a node.\r\n * @param clientRect Dimensions of the node.\r\n * @param pointerY Position of the user's pointer along the y axis.\r\n */\r\nfunction getVerticalScrollDirection(clientRect: KtdClientRect, pointerY: number) {\r\n    const {top, bottom, height} = clientRect;\r\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\r\n\r\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\r\n        return AutoScrollVerticalDirection.UP;\r\n    } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\r\n        return AutoScrollVerticalDirection.DOWN;\r\n    }\r\n\r\n    return AutoScrollVerticalDirection.NONE;\r\n}\r\n\r\n/**\r\n * Gets whether the horizontal auto-scroll direction of a node.\r\n * @param clientRect Dimensions of the node.\r\n * @param pointerX Position of the user's pointer along the x axis.\r\n */\r\nfunction getHorizontalScrollDirection(clientRect: KtdClientRect, pointerX: number) {\r\n    const {left, right, width} = clientRect;\r\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\r\n\r\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\r\n        return AutoScrollHorizontalDirection.LEFT;\r\n    } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\r\n        return AutoScrollHorizontalDirection.RIGHT;\r\n    }\r\n\r\n    return AutoScrollHorizontalDirection.NONE;\r\n}\r\n\r\n/**\r\n * Returns an observable that schedules a loop and apply scroll on the scrollNode into the specified direction/s.\r\n * This observable doesn't emit, it just performs the 'scroll' side effect.\r\n * @param scrollNode, node where the scroll would be applied.\r\n * @param verticalScrollDirection, vertical direction of the scroll.\r\n * @param horizontalScrollDirection, horizontal direction of the scroll.\r\n * @param scrollStep, scroll step in CSS pixels that would be applied in every loop.\r\n */\r\nfunction scrollToDirectionInterval$(scrollNode: HTMLElement | Window, verticalScrollDirection: AutoScrollVerticalDirection, horizontalScrollDirection: AutoScrollHorizontalDirection, scrollStep: number = 2) {\r\n    return interval(0, animationFrameScheduler)\r\n        .pipe(\r\n            tap(() => {\r\n                if (verticalScrollDirection === AutoScrollVerticalDirection.UP) {\r\n                    incrementVerticalScroll(scrollNode, -scrollStep);\r\n                } else if (verticalScrollDirection === AutoScrollVerticalDirection.DOWN) {\r\n                    incrementVerticalScroll(scrollNode, scrollStep);\r\n                }\r\n\r\n                if (horizontalScrollDirection === AutoScrollHorizontalDirection.LEFT) {\r\n                    incrementHorizontalScroll(scrollNode, -scrollStep);\r\n                } else if (horizontalScrollDirection === AutoScrollHorizontalDirection.RIGHT) {\r\n                    incrementHorizontalScroll(scrollNode, scrollStep);\r\n                }\r\n            }),\r\n            ktdNoEmit()\r\n        );\r\n}\r\n\r\nexport interface KtdScrollIfNearElementOptions {\r\n    scrollStep?: number;\r\n    disableVertical?: boolean;\r\n    disableHorizontal?: boolean;\r\n}\r\n\r\n/**\r\n * Given a source$ observable with pointer location, scroll the scrollNode if the pointer is near to it.\r\n * This observable doesn't emit, it just performs a 'scroll' side effect.\r\n * @param scrollableParent, parent node in which the scroll would be performed.\r\n * @param options, configuration options.\r\n */\r\nexport function ktdScrollIfNearElementClientRect$(scrollableParent: HTMLElement | Document, options?: KtdScrollIfNearElementOptions): (source$: Observable<{ pointerX: number, pointerY: number }>) => Observable<any> {\r\n\r\n    let scrollNode: Window | HTMLElement;\r\n    let scrollableParentClientRect: KtdClientRect;\r\n    let scrollableParentScrollWidth: number;\r\n\r\n    if (scrollableParent === document) {\r\n        scrollNode = document.defaultView as Window;\r\n        const {width, height} = getViewportSize();\r\n        scrollableParentClientRect = {width, height, top: 0, right: width, bottom: height, left: 0};\r\n        scrollableParentScrollWidth = getDocumentScrollWidth();\r\n    } else {\r\n        scrollNode = scrollableParent as HTMLElement;\r\n        scrollableParentClientRect = getMutableClientRect(scrollableParent as HTMLElement);\r\n        scrollableParentScrollWidth = (scrollableParent as HTMLElement).scrollWidth;\r\n    }\r\n\r\n    /**\r\n     * IMPORTANT: By design, only let scroll horizontal if the scrollable parent has explicitly an scroll horizontal.\r\n     * This layout solution is not designed in mind to have any scroll horizontal, but exceptionally we allow it in this\r\n     * specific use case.\r\n     */\r\n    options = options || {};\r\n    if (options.disableHorizontal == null && scrollableParentScrollWidth <= scrollableParentClientRect.width) {\r\n        options.disableHorizontal = true;\r\n    }\r\n\r\n    return (source$) => source$.pipe(\r\n        map(({pointerX, pointerY}) => {\r\n            let verticalScrollDirection = getVerticalScrollDirection(scrollableParentClientRect, pointerY);\r\n            let horizontalScrollDirection = getHorizontalScrollDirection(scrollableParentClientRect, pointerX);\r\n\r\n            // Check if scroll directions are disabled.\r\n            if (options?.disableVertical) {\r\n                verticalScrollDirection = AutoScrollVerticalDirection.NONE;\r\n            }\r\n            if (options?.disableHorizontal) {\r\n                horizontalScrollDirection = AutoScrollHorizontalDirection.NONE;\r\n            }\r\n\r\n            return {verticalScrollDirection, horizontalScrollDirection};\r\n        }),\r\n        distinctUntilChanged((prev, actual) => {\r\n            return prev.verticalScrollDirection === actual.verticalScrollDirection\r\n                && prev.horizontalScrollDirection === actual.horizontalScrollDirection;\r\n        }),\r\n        switchMap(({verticalScrollDirection, horizontalScrollDirection}) => {\r\n            if (verticalScrollDirection || horizontalScrollDirection) {\r\n                return scrollToDirectionInterval$(scrollNode, verticalScrollDirection, horizontalScrollDirection, options?.scrollStep);\r\n            } else {\r\n                return NEVER;\r\n            }\r\n        })\r\n    );\r\n}\r\n\r\n/**\r\n * Emits on EVERY scroll event and returns the accumulated scroll offset relative to the initial scroll position.\r\n * @param scrollableParent, node in which scroll events would be listened.\r\n */\r\nexport function ktdGetScrollTotalRelativeDifference$(scrollableParent: HTMLElement | Document): Observable<{ top: number, left: number }> {\r\n    let scrollInitialPosition;\r\n\r\n    // Calculate initial scroll position\r\n    if (scrollableParent === document) {\r\n        scrollInitialPosition = getViewportScrollPosition();\r\n    } else {\r\n        scrollInitialPosition = {\r\n            top: (scrollableParent as HTMLElement).scrollTop,\r\n            left: (scrollableParent as HTMLElement).scrollLeft\r\n        };\r\n    }\r\n\r\n    return fromEvent(scrollableParent, 'scroll', ktdNormalizePassiveListenerOptions({capture: true}) as AddEventListenerOptions).pipe(\r\n        map(() => {\r\n            let newTop: number;\r\n            let newLeft: number;\r\n\r\n            if (scrollableParent === document) {\r\n                const viewportScrollPosition = getViewportScrollPosition();\r\n                newTop = viewportScrollPosition.top;\r\n                newLeft = viewportScrollPosition.left;\r\n            } else {\r\n                newTop = (scrollableParent as HTMLElement).scrollTop;\r\n                newLeft = (scrollableParent as HTMLElement).scrollLeft;\r\n            }\r\n\r\n            const topDifference = scrollInitialPosition.top - newTop;\r\n            const leftDifference = scrollInitialPosition.left - newLeft;\r\n\r\n            return {top: topDifference, left: leftDifference};\r\n        })\r\n    );\r\n\r\n}\r\n\r\n/** Returns the viewport's width and height. */\r\nfunction getViewportSize(): { width: number, height: number } {\r\n    const _window = document.defaultView || window;\r\n    return {\r\n        width: _window.innerWidth,\r\n        height: _window.innerHeight\r\n    };\r\n\r\n}\r\n\r\n/** Gets a ClientRect for the viewport's bounds. */\r\nfunction getViewportRect(): KtdClientRect {\r\n    // Use the document element's bounding rect rather than the window scroll properties\r\n    // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\r\n    // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\r\n    // conceptual viewports. Under most circumstances these viewports are equivalent, but they\r\n    // can disagree when the page is pinch-zoomed (on devices that support touch).\r\n    // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\r\n    // We use the documentElement instead of the body because, by default (without a css reset)\r\n    // browsers typically give the document body an 8px margin, which is not included in\r\n    // getBoundingClientRect().\r\n    const scrollPosition = getViewportScrollPosition();\r\n    const {width, height} = getViewportSize();\r\n\r\n    return {\r\n        top: scrollPosition.top,\r\n        left: scrollPosition.left,\r\n        bottom: scrollPosition.top + height,\r\n        right: scrollPosition.left + width,\r\n        height,\r\n        width,\r\n    };\r\n}\r\n\r\n/** Gets the (top, left) scroll position of the viewport. */\r\nfunction getViewportScrollPosition(): { top: number, left: number } {\r\n\r\n    // The top-left-corner of the viewport is determined by the scroll position of the document\r\n    // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\r\n    // whether `document.body` or `document.documentElement` is the scrolled element, so reading\r\n    // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\r\n    // `document.documentElement` works consistently, where the `top` and `left` values will\r\n    // equal negative the scroll position.\r\n    const windowRef = document.defaultView || window;\r\n    const documentElement = document.documentElement!;\r\n    const documentRect = documentElement.getBoundingClientRect();\r\n\r\n    const top = -documentRect.top || document.body.scrollTop || windowRef.scrollY ||\r\n        documentElement.scrollTop || 0;\r\n\r\n    const left = -documentRect.left || document.body.scrollLeft || windowRef.scrollX ||\r\n        documentElement.scrollLeft || 0;\r\n\r\n    return {top, left};\r\n}\r\n\r\n/** Returns the document scroll width */\r\nfunction getDocumentScrollWidth() {\r\n    return Math.max(document.body.scrollWidth, document.documentElement.scrollWidth);\r\n}\r\n\r\n","import {\r\n    AfterContentChecked, AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, EmbeddedViewRef, EventEmitter, Input,\r\n    NgZone, OnChanges, OnDestroy, Output, QueryList, Renderer2, SimpleChanges, ViewContainerRef, ViewEncapsulation\r\n} from '@angular/core';\r\nimport { coerceNumberProperty, NumberInput } from './coercion/number-property';\r\nimport { KtdGridItemComponent } from './grid-item/grid-item.component';\r\nimport { combineLatest, merge, NEVER, Observable, Observer, of, Subscription } from 'rxjs';\r\nimport { exhaustMap, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\r\nimport { ktdGetGridItemRowHeight, ktdGridItemDragging, ktdGridItemLayoutItemAreEqual, ktdGridItemResizing } from './utils/grid.utils';\r\nimport { compact } from './utils/react-grid-layout.utils';\r\nimport {\r\n    GRID_ITEM_GET_RENDER_DATA_TOKEN, KtdGridCfg, KtdGridCompactType, KtdGridItemRenderData, KtdGridLayout, KtdGridLayoutItem\r\n} from './grid.definitions';\r\nimport { ktdMouseOrTouchEnd, ktdPointerClientX, ktdPointerClientY } from './utils/pointer.utils';\r\nimport { KtdDictionary } from '../types';\r\nimport { KtdGridService } from './grid.service';\r\nimport { getMutableClientRect, KtdClientRect } from './utils/client-rect';\r\nimport { ktdGetScrollTotalRelativeDifference$, ktdScrollIfNearElementClientRect$ } from './utils/scroll';\r\nimport { BooleanInput, coerceBooleanProperty } from './coercion/boolean-property';\r\nimport { KtdGridItemPlaceholder } from './directives/placeholder';\r\n\r\ninterface KtdDragResizeEvent {\r\n    layout: KtdGridLayout;\r\n    layoutItem: KtdGridLayoutItem;\r\n    gridItemRef: KtdGridItemComponent;\r\n}\r\n\r\nexport type KtdDragStart = KtdDragResizeEvent;\r\nexport type KtdResizeStart = KtdDragResizeEvent;\r\nexport type KtdDragEnd = KtdDragResizeEvent;\r\nexport type KtdResizeEnd = KtdDragResizeEvent;\r\n\r\nexport interface KtdGridItemResizeEvent {\r\n    width: number;\r\n    height: number;\r\n    gridItemRef: KtdGridItemComponent;\r\n}\r\n\r\ntype DragActionType = 'drag' | 'resize';\r\n\r\nfunction getDragResizeEventData(gridItem: KtdGridItemComponent, layout: KtdGridLayout): KtdDragResizeEvent {\r\n    return {\r\n        layout,\r\n        layoutItem: layout.find((item) => item.id === gridItem.id)!,\r\n        gridItemRef: gridItem\r\n    };\r\n}\r\n\r\n\r\nfunction layoutToRenderItems(config: KtdGridCfg, width: number, height: number): KtdDictionary<KtdGridItemRenderData<number>> {\r\n    const {cols, rowHeight, layout, gap} = config;\r\n    const rowHeightInPixels = rowHeight === 'fit' ? ktdGetGridItemRowHeight(layout, height, gap) : rowHeight;\r\n    const widthExcludingGap = width - Math.max((gap * (cols - 1)), 0);\r\n    const itemWidthPerColumn = (widthExcludingGap / cols);\r\n    const renderItems: KtdDictionary<KtdGridItemRenderData<number>> = {};\r\n    for (const item of layout) {\r\n        renderItems[item.id] = {\r\n            id: item.id,\r\n            top: item.y * rowHeightInPixels + gap * item.y,\r\n            left: item.x * itemWidthPerColumn + gap * item.x,\r\n            width: item.w * itemWidthPerColumn + gap * Math.max(item.w - 1, 0),\r\n            height: item.h * rowHeightInPixels + gap * Math.max(item.h - 1, 0),\r\n        };\r\n    }\r\n    return renderItems;\r\n}\r\n\r\nfunction getGridHeight(layout: KtdGridLayout, rowHeight: number, gap: number): number {\r\n    return layout.reduce((acc, cur) => Math.max(acc, (cur.y + cur.h) * rowHeight + Math.max(cur.y + cur.h - 1, 0) * gap), 0);\r\n}\r\n\r\n// eslint-disable-next-line @katoid/prefix-exported-code\r\nexport function parseRenderItemToPixels(renderItem: KtdGridItemRenderData<number>): KtdGridItemRenderData<string> {\r\n    return {\r\n        id: renderItem.id,\r\n        top: `${renderItem.top}px`,\r\n        left: `${renderItem.left}px`,\r\n        width: `${renderItem.width}px`,\r\n        height: `${renderItem.height}px`\r\n    };\r\n}\r\n\r\n// eslint-disable-next-line @katoid/prefix-exported-code\r\nexport function __gridItemGetRenderDataFactoryFunc(gridCmp: KtdGridComponent) {\r\n    return function(id: string) {\r\n        return parseRenderItemToPixels(gridCmp.getItemRenderData(id));\r\n    };\r\n}\r\n\r\nexport function ktdGridItemGetRenderDataFactoryFunc(gridCmp: KtdGridComponent) {\r\n    // Workaround explained: https://github.com/ng-packagr/ng-packagr/issues/696#issuecomment-387114613\r\n    const resultFunc = __gridItemGetRenderDataFactoryFunc(gridCmp);\r\n    return resultFunc;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'ktd-grid',\r\n    templateUrl: './grid.component.html',\r\n    styleUrls: ['./grid.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: GRID_ITEM_GET_RENDER_DATA_TOKEN,\r\n            useFactory: ktdGridItemGetRenderDataFactoryFunc,\r\n            deps: [KtdGridComponent]\r\n        }\r\n    ]\r\n})\r\nexport class KtdGridComponent implements OnChanges, AfterContentInit, AfterContentChecked, OnDestroy {\r\n    /** Query list of grid items that are being rendered. */\r\n    @ContentChildren(KtdGridItemComponent, {descendants: true}) _gridItems: QueryList<KtdGridItemComponent>;\r\n\r\n    /** Emits when layout change */\r\n    @Output() layoutUpdated: EventEmitter<KtdGridLayout> = new EventEmitter<KtdGridLayout>();\r\n\r\n    /** Emits when drag starts */\r\n    @Output() dragStarted: EventEmitter<KtdDragStart> = new EventEmitter<KtdDragStart>();\r\n\r\n    /** Emits when resize starts */\r\n    @Output() resizeStarted: EventEmitter<KtdResizeStart> = new EventEmitter<KtdResizeStart>();\r\n\r\n    /** Emits when drag ends */\r\n    @Output() dragEnded: EventEmitter<KtdDragEnd> = new EventEmitter<KtdDragEnd>();\r\n\r\n    /** Emits when resize ends */\r\n    @Output() resizeEnded: EventEmitter<KtdResizeEnd> = new EventEmitter<KtdResizeEnd>();\r\n\r\n    /** Emits when a grid item is being resized and its bounds have changed */\r\n    @Output() gridItemResize: EventEmitter<KtdGridItemResizeEvent> = new EventEmitter<KtdGridItemResizeEvent>();\r\n\r\n    /**\r\n     * Parent element that contains the scroll. If an string is provided it would search that element by id on the dom.\r\n     * If no data provided or null autoscroll is not performed.\r\n     */\r\n    @Input() scrollableParent: HTMLElement | Document | string | null = null;\r\n\r\n    /** Whether or not to update the internal layout when some dependent property change. */\r\n    @Input()\r\n    get compactOnPropsChange(): boolean { return this._compactOnPropsChange; }\r\n\r\n    set compactOnPropsChange(value: boolean) {\r\n        this._compactOnPropsChange = coerceBooleanProperty(value);\r\n    }\r\n\r\n    private _compactOnPropsChange: boolean = true;\r\n\r\n    /** If true, grid items won't change position when being dragged over. Handy when using no compaction */\r\n    @Input()\r\n    get preventCollision(): boolean { return this._preventCollision; }\r\n\r\n    set preventCollision(value: boolean) {\r\n        this._preventCollision = coerceBooleanProperty(value);\r\n    }\r\n\r\n    private _preventCollision: boolean = false;\r\n\r\n    /** Number of CSS pixels that would be scrolled on each 'tick' when auto scroll is performed. */\r\n    @Input()\r\n    get scrollSpeed(): number { return this._scrollSpeed; }\r\n\r\n    set scrollSpeed(value: number) {\r\n        this._scrollSpeed = coerceNumberProperty(value, 2);\r\n    }\r\n\r\n    private _scrollSpeed: number = 2;\r\n\r\n    /** Type of compaction that will be applied to the layout (vertical, horizontal or free). Defaults to 'vertical' */\r\n    @Input()\r\n    get compactType(): KtdGridCompactType {\r\n        return this._compactType;\r\n    }\r\n\r\n    set compactType(val: KtdGridCompactType) {\r\n        this._compactType = val;\r\n    }\r\n\r\n    private _compactType: KtdGridCompactType = 'vertical';\r\n\r\n    /**\r\n     * Row height as number or as 'fit'.\r\n     * If rowHeight is a number value, it means that each row would have those css pixels in height.\r\n     * if rowHeight is 'fit', it means that rows will fit in the height available. If 'fit' value is set, a 'height' should be also provided.\r\n     */\r\n    @Input()\r\n    get rowHeight(): number | 'fit' { return this._rowHeight; }\r\n\r\n    set rowHeight(val: number | 'fit') {\r\n        this._rowHeight = val === 'fit' ? val : Math.max(1, Math.round(coerceNumberProperty(val)));\r\n    }\r\n\r\n    private _rowHeight: number | 'fit' = 100;\r\n\r\n    /** Number of columns  */\r\n    @Input()\r\n    get cols(): number { return this._cols; }\r\n\r\n    set cols(val: number) {\r\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(val)));\r\n    }\r\n\r\n    private _cols: number = 6;\r\n\r\n    /** Layout of the grid. Array of all the grid items with its 'id' and position on the grid. */\r\n    @Input()\r\n    get layout(): KtdGridLayout { return this._layout; }\r\n\r\n    set layout(layout: KtdGridLayout) {\r\n        /**\r\n         * Enhancement:\r\n         * Only set layout if it's reference has changed and use a boolean to track whenever recalculate the layout on ngOnChanges.\r\n         *\r\n         * Why:\r\n         * The normal use of this lib is having the variable layout in the outer component or in a store, assigning it whenever it changes and\r\n         * binded in the component with it's input [layout]. In this scenario, we would always calculate one unnecessary change on the layout when\r\n         * it is re-binded on the input.\r\n         */\r\n        this._layout = layout;\r\n    }\r\n\r\n    private _layout: KtdGridLayout;\r\n\r\n    /** Grid gap in css pixels */\r\n    @Input()\r\n    get gap(): number {\r\n        return this._gap;\r\n    }\r\n\r\n    set gap(val: number) {\r\n        this._gap = Math.max(coerceNumberProperty(val), 0);\r\n    }\r\n\r\n    private _gap: number = 0;\r\n\r\n\r\n    /**\r\n     * If height is a number, fixes the height of the grid to it, recommended when rowHeight = 'fit' is used.\r\n     * If height is null, height will be automatically set according to its inner grid items.\r\n     * Defaults to null.\r\n     * */\r\n    @Input()\r\n    get height(): number | null {\r\n        return this._height;\r\n    }\r\n\r\n    set height(val: number | null) {\r\n        this._height = typeof val === 'number' ? Math.max(val, 0) : null;\r\n    }\r\n\r\n    private _height: number | null = null;\r\n    private gridCurrentHeight: number;\r\n\r\n    get config(): KtdGridCfg {\r\n        return {\r\n            cols: this.cols,\r\n            rowHeight: this.rowHeight,\r\n            height: this.height,\r\n            layout: this.layout,\r\n            preventCollision: this.preventCollision,\r\n            gap: this.gap,\r\n        };\r\n    }\r\n\r\n    /** Reference to the view of the placeholder element. */\r\n    private placeholderRef: EmbeddedViewRef<any> | null;\r\n\r\n    /** Element that is rendered as placeholder when a grid item is being dragged */\r\n    private placeholder: HTMLElement | null;\r\n\r\n    private _gridItemsRenderData: KtdDictionary<KtdGridItemRenderData<number>>;\r\n    private subscriptions: Subscription[];\r\n\r\n    constructor(private gridService: KtdGridService,\r\n                private elementRef: ElementRef,\r\n                private viewContainerRef: ViewContainerRef,\r\n                private renderer: Renderer2,\r\n                private ngZone: NgZone) {\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n        if (this.rowHeight === 'fit' && this.height == null) {\r\n            console.warn(`KtdGridComponent: The @Input() height should not be null when using rowHeight 'fit'`);\r\n        }\r\n\r\n        let needsCompactLayout = false;\r\n        let needsRecalculateRenderData = false;\r\n\r\n        // TODO: Does fist change need to be compacted by default?\r\n        // Compact layout whenever some dependent prop changes.\r\n        if (changes.compactType || changes.cols || changes.layout) {\r\n            needsCompactLayout = true;\r\n        }\r\n\r\n        // Check if wee need to recalculate rendering data.\r\n        if (needsCompactLayout || changes.rowHeight || changes.height || changes.gap) {\r\n            needsRecalculateRenderData = true;\r\n        }\r\n\r\n        // Only compact layout if lib user has provided it. Lib users that want to save/store always the same layout  as it is represented (compacted)\r\n        // can use KtdCompactGrid utility and pre-compact the layout. This is the recommended behaviour for always having a the same layout on this component\r\n        // and the ones that uses it.\r\n        if (needsCompactLayout && this.compactOnPropsChange) {\r\n            this.compactLayout();\r\n        }\r\n\r\n        if (needsRecalculateRenderData) {\r\n            this.calculateRenderData();\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.initSubscriptions();\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        this.render();\r\n    }\r\n\r\n    resize() {\r\n        this.calculateRenderData();\r\n        this.render();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    compactLayout() {\r\n        this.layout = compact(this.layout, this.compactType, this.cols);\r\n    }\r\n\r\n    getItemsRenderData(): KtdDictionary<KtdGridItemRenderData<number>> {\r\n        return {...this._gridItemsRenderData};\r\n    }\r\n\r\n    getItemRenderData(itemId: string): KtdGridItemRenderData<number> {\r\n        return this._gridItemsRenderData[itemId];\r\n    }\r\n\r\n    calculateRenderData() {\r\n        const clientRect = (this.elementRef.nativeElement as HTMLElement).getBoundingClientRect();\r\n        this.gridCurrentHeight = this.height ?? (this.rowHeight === 'fit' ? clientRect.height : getGridHeight(this.layout, this.rowHeight, this.gap));\r\n        this._gridItemsRenderData = layoutToRenderItems(this.config, clientRect.width, this.gridCurrentHeight);\r\n    }\r\n\r\n    render() {\r\n        this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.gridCurrentHeight}px`);\r\n        this.updateGridItemsStyles();\r\n    }\r\n\r\n    private updateGridItemsStyles() {\r\n        this._gridItems.forEach(item => {\r\n            const gridItemRenderData: KtdGridItemRenderData<number> | undefined = this._gridItemsRenderData[item.id];\r\n            if (gridItemRenderData == null) {\r\n                console.error(`Couldn\\'t find the specified grid item for the id: ${item.id}`);\r\n            } else {\r\n                item.setStyles(parseRenderItemToPixels(gridItemRenderData));\r\n            }\r\n        });\r\n    }\r\n\r\n    private initSubscriptions() {\r\n        this.subscriptions = [\r\n            this._gridItems.changes.pipe(\r\n                startWith(this._gridItems),\r\n                switchMap((gridItems: QueryList<KtdGridItemComponent>) => {\r\n                    return merge(\r\n                        ...gridItems.map((gridItem) => gridItem.dragStart$.pipe(map((event) => ({event, gridItem, type: 'drag' as DragActionType})))),\r\n                        ...gridItems.map((gridItem) => gridItem.resizeStart$.pipe(map((event) => ({event, gridItem, type: 'resize' as DragActionType})))),\r\n                    ).pipe(exhaustMap(({event, gridItem, type}) => {\r\n                        // Emit drag or resize start events. Ensure that is start event is inside the zone.\r\n                        this.ngZone.run(() => (type === 'drag' ? this.dragStarted : this.resizeStarted).emit(getDragResizeEventData(gridItem, this.layout)));\r\n\r\n                        // Perform drag sequence\r\n                        return this.performDragSequence$(gridItem, event, type).pipe(\r\n                            map((layout) => ({layout, gridItem, type})));\r\n\r\n                    }));\r\n                })\r\n            ).subscribe(({layout, gridItem, type}) => {\r\n                this.layout = layout;\r\n                // Calculate new rendering data given the new layout.\r\n                this.calculateRenderData();\r\n                // Emit drag or resize end events.\r\n                (type === 'drag' ? this.dragEnded : this.resizeEnded).emit(getDragResizeEventData(gridItem, layout));\r\n                // Notify that the layout has been updated.\r\n                this.layoutUpdated.emit(layout);\r\n            })\r\n\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Perform a general grid drag action, from start to end. A general grid drag action basically includes creating the placeholder element and adding\r\n     * some class animations. calcNewStateFunc needs to be provided in order to calculate the new state of the layout.\r\n     * @param gridItem that is been dragged\r\n     * @param pointerDownEvent event (mousedown or touchdown) where the user initiated the drag\r\n     * @param calcNewStateFunc function that return the new layout state and the drag element position\r\n     */\r\n    private performDragSequence$(gridItem: KtdGridItemComponent, pointerDownEvent: MouseEvent | TouchEvent, type: DragActionType): Observable<KtdGridLayout> {\r\n\r\n        return new Observable<KtdGridLayout>((observer: Observer<KtdGridLayout>) => {\r\n            // Retrieve grid (parent) and gridItem (draggedElem) client rects.\r\n            const gridElemClientRect: KtdClientRect = getMutableClientRect(this.elementRef.nativeElement as HTMLElement);\r\n            const dragElemClientRect: KtdClientRect = getMutableClientRect(gridItem.elementRef.nativeElement as HTMLElement);\r\n\r\n            const scrollableParent = typeof this.scrollableParent === 'string' ? document.getElementById(this.scrollableParent) : this.scrollableParent;\r\n\r\n            this.renderer.addClass(gridItem.elementRef.nativeElement, 'no-transitions');\r\n            this.renderer.addClass(gridItem.elementRef.nativeElement, 'ktd-grid-item-dragging');\r\n\r\n            const placeholderClientRect: KtdClientRect = {\r\n                ...dragElemClientRect,\r\n                left: dragElemClientRect.left - gridElemClientRect.left,\r\n                top: dragElemClientRect.top - gridElemClientRect.top\r\n            }\r\n            this.createPlaceholderElement(placeholderClientRect, gridItem.placeholder);\r\n\r\n            let newLayout: KtdGridLayoutItem[];\r\n\r\n            // TODO (enhancement): consider move this 'side effect' observable inside the main drag loop.\r\n            //  - Pros are that we would not repeat subscriptions and takeUntil would shut down observables at the same time.\r\n            //  - Cons are that moving this functionality as a side effect inside the main drag loop would be confusing.\r\n            const scrollSubscription = this.ngZone.runOutsideAngular(() =>\r\n                (!scrollableParent ? NEVER : this.gridService.mouseOrTouchMove$(document).pipe(\r\n                    map((event) => ({\r\n                        pointerX: ktdPointerClientX(event),\r\n                        pointerY: ktdPointerClientY(event)\r\n                    })),\r\n                    ktdScrollIfNearElementClientRect$(scrollableParent, {scrollStep: this.scrollSpeed})\r\n                )).pipe(\r\n                    takeUntil(ktdMouseOrTouchEnd(document))\r\n                ).subscribe());\r\n\r\n            /**\r\n             * Main subscription, it listens for 'pointer move' and 'scroll' events and recalculates the layout on each emission\r\n             */\r\n            const subscription = this.ngZone.runOutsideAngular(() =>\r\n                merge(\r\n                    combineLatest([\r\n                        this.gridService.mouseOrTouchMove$(document),\r\n                        ...(!scrollableParent ? [of({top: 0, left: 0})] : [\r\n                            ktdGetScrollTotalRelativeDifference$(scrollableParent).pipe(\r\n                                startWith({top: 0, left: 0}) // Force first emission to allow CombineLatest to emit even no scroll event has occurred\r\n                            )\r\n                        ])\r\n                    ])\r\n                ).pipe(\r\n                    takeUntil(ktdMouseOrTouchEnd(document)),\r\n                ).subscribe(([pointerDragEvent, scrollDifference]: [MouseEvent | TouchEvent, { top: number, left: number }]) => {\r\n                        pointerDragEvent.preventDefault();\r\n\r\n                        /**\r\n                         * Set the new layout to be the layout in which the calcNewStateFunc would be executed.\r\n                         * NOTE: using the mutated layout is the way to go by 'react-grid-layout' utils. If we don't use the previous layout,\r\n                         * some utilities from 'react-grid-layout' would not work as expected.\r\n                         */\r\n                        const currentLayout: KtdGridLayout = newLayout || this.layout;\r\n\r\n                        // Get the correct newStateFunc depending on if we are dragging or resizing\r\n                        const calcNewStateFunc = type === 'drag' ? ktdGridItemDragging : ktdGridItemResizing;\r\n\r\n                        const {layout, draggedItemPos} = calcNewStateFunc(gridItem, {\r\n                            layout: currentLayout,\r\n                            rowHeight: this.rowHeight,\r\n                            height: this.height,\r\n                            cols: this.cols,\r\n                            preventCollision: this.preventCollision,\r\n                            gap: this.gap,\r\n                        }, this.compactType, {\r\n                            pointerDownEvent,\r\n                            pointerDragEvent,\r\n                            gridElemClientRect,\r\n                            dragElemClientRect,\r\n                            scrollDifference\r\n                        });\r\n                        newLayout = layout;\r\n\r\n                        this.gridCurrentHeight = this.height ?? (this.rowHeight === 'fit' ? gridElemClientRect.height : getGridHeight(newLayout, this.rowHeight, this.gap))\r\n\r\n                        this._gridItemsRenderData = layoutToRenderItems({\r\n                            cols: this.cols,\r\n                            rowHeight: this.rowHeight,\r\n                            height: this.height,\r\n                            layout: newLayout,\r\n                            preventCollision: this.preventCollision,\r\n                            gap: this.gap,\r\n                        }, gridElemClientRect.width, gridElemClientRect.height);\r\n\r\n                        const newGridItemRenderData = {...this._gridItemsRenderData[gridItem.id]}\r\n                        const placeholderStyles = parseRenderItemToPixels(newGridItemRenderData);\r\n\r\n                        // Put the real final position to the placeholder element\r\n                        this.placeholder!.style.width = placeholderStyles.width;\r\n                        this.placeholder!.style.height = placeholderStyles.height;\r\n                        this.placeholder!.style.transform = `translateX(${placeholderStyles.left}) translateY(${placeholderStyles.top})`;\r\n\r\n                        // modify the position of the dragged item to be the once we want (for example the mouse position or whatever)\r\n                        this._gridItemsRenderData[gridItem.id] = {\r\n                            ...draggedItemPos,\r\n                            id: this._gridItemsRenderData[gridItem.id].id\r\n                        };\r\n\r\n                        this.render();\r\n\r\n                        // If we are performing a resize, and bounds have changed, emit event.\r\n                        // NOTE: Only emit on resize for now. Use case for normal drag is not justified for now. Emitting on resize is, since we may want to re-render the grid item or the placeholder in order to fit the new bounds.\r\n                        if (type === 'resize') {\r\n                            const prevGridItem = currentLayout.find(item => item.id === gridItem.id)!;\r\n                            const newGridItem = newLayout.find(item => item.id === gridItem.id)!;\r\n                            // Check if item resized has changed, if so, emit resize change event\r\n                            if (!ktdGridItemLayoutItemAreEqual(prevGridItem, newGridItem)) {\r\n                                this.gridItemResize.emit({\r\n                                    width: newGridItemRenderData.width,\r\n                                    height: newGridItemRenderData.height,\r\n                                    gridItemRef: getDragResizeEventData(gridItem, newLayout).gridItemRef\r\n                                });\r\n                            }\r\n                        }\r\n                    },\r\n                    (error) => observer.error(error),\r\n                    () => {\r\n                        this.ngZone.run(() => {\r\n                            // Remove drag classes\r\n                            this.renderer.removeClass(gridItem.elementRef.nativeElement, 'no-transitions');\r\n                            this.renderer.removeClass(gridItem.elementRef.nativeElement, 'ktd-grid-item-dragging');\r\n\r\n                            this.destroyPlaceholder();\r\n\r\n                            if (newLayout) {\r\n                                // TODO: newLayout should already be pruned. If not, it should have type Layout, not KtdGridLayout as it is now.\r\n                                // Prune react-grid-layout compact extra properties.\r\n                                observer.next(newLayout.map(item => ({\r\n                                    id: item.id,\r\n                                    x: item.x,\r\n                                    y: item.y,\r\n                                    w: item.w,\r\n                                    h: item.h,\r\n                                    minW: item.minW,\r\n                                    minH: item.minH,\r\n                                    maxW: item.maxW,\r\n                                    maxH: item.maxH,\r\n                                })) as KtdGridLayout);\r\n                            } else {\r\n                                // TODO: Need we really to emit if there is no layout change but drag started and ended?\r\n                                observer.next(this.layout);\r\n                            }\r\n\r\n                            observer.complete();\r\n                        });\r\n\r\n                    }));\r\n\r\n\r\n            return () => {\r\n                scrollSubscription.unsubscribe();\r\n                subscription.unsubscribe();\r\n            };\r\n        });\r\n    }\r\n\r\n    /** Creates placeholder element */\r\n    private createPlaceholderElement(clientRect: KtdClientRect, gridItemPlaceholder?: KtdGridItemPlaceholder) {\r\n        this.placeholder = this.renderer.createElement('div');\r\n        this.placeholder!.style.width = `${clientRect.width}px`;\r\n        this.placeholder!.style.height = `${clientRect.height}px`;\r\n        this.placeholder!.style.transform = `translateX(${clientRect.left}px) translateY(${clientRect.top}px)`;\r\n        this.placeholder!.classList.add('ktd-grid-item-placeholder');\r\n        this.renderer.appendChild(this.elementRef.nativeElement, this.placeholder);\r\n\r\n        // Create and append custom placeholder if provided.\r\n        // Important: Append it after creating & appending the container placeholder. This way we ensure parent bounds are set when creating the embeddedView.\r\n        if (gridItemPlaceholder) {\r\n            this.placeholderRef = this.viewContainerRef.createEmbeddedView(\r\n                gridItemPlaceholder.templateRef,\r\n                gridItemPlaceholder.data\r\n            );\r\n            this.placeholderRef.rootNodes.forEach(node => this.placeholder!.appendChild(node));\r\n            this.placeholderRef.detectChanges();\r\n        } else {\r\n            this.placeholder!.classList.add('ktd-grid-item-placeholder-default');\r\n        }\r\n    }\r\n\r\n    /** Destroys the placeholder element and its ViewRef. */\r\n    private destroyPlaceholder() {\r\n        this.placeholder?.remove();\r\n        this.placeholderRef?.destroy();\r\n        this.placeholder = this.placeholderRef = null!;\r\n    }\r\n\r\n    static ngAcceptInputType_cols: NumberInput;\r\n    static ngAcceptInputType_rowHeight: NumberInput;\r\n    static ngAcceptInputType_scrollSpeed: NumberInput;\r\n    static ngAcceptInputType_compactOnPropsChange: BooleanInput;\r\n    static ngAcceptInputType_preventCollision: BooleanInput;\r\n}\r\n\r\n","<ng-content></ng-content>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { KtdGridComponent } from './grid.component';\r\nimport { KtdGridItemComponent } from './grid-item/grid-item.component';\r\nimport { KtdGridDragHandle } from './directives/drag-handle';\r\nimport { KtdGridResizeHandle } from './directives/resize-handle';\r\nimport { KtdGridService } from './grid.service';\r\nimport { KtdGridItemPlaceholder } from '../public-api';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        KtdGridComponent,\r\n        KtdGridItemComponent,\r\n        KtdGridDragHandle,\r\n        KtdGridResizeHandle,\r\n        KtdGridItemPlaceholder\r\n    ],\r\n    exports: [\r\n        KtdGridComponent,\r\n        KtdGridItemComponent,\r\n        KtdGridDragHandle,\r\n        KtdGridResizeHandle,\r\n        KtdGridItemPlaceholder\r\n    ],\r\n    providers: [\r\n        KtdGridService\r\n    ],\r\n    imports: [\r\n        CommonModule\r\n    ]\r\n})\r\nexport class KtdGridModule {}\r\n","/*\r\n * Public API Surface of grid\r\n */\r\nexport { ktdGridCompact, ktdTrackById } from './lib/utils/grid.utils';\r\nexport { KtdClientRect } from './lib/utils/client-rect';\r\nexport * from './lib/directives/drag-handle';\r\nexport * from './lib/directives/resize-handle';\r\nexport * from './lib/directives/placeholder';\r\nexport * from './lib/grid-item/grid-item.component';\r\nexport * from './lib/grid.definitions';\r\nexport * from './lib/grid.component';\r\nexport * from './lib/grid.module';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.KtdGridService"],"mappings":"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"}