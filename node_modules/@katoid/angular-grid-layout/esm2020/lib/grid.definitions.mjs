import { InjectionToken } from '@angular/core';
export const GRID_ITEM_GET_RENDER_DATA_TOKEN = new InjectionToken('GRID_ITEM_GET_RENDER_DATA_TOKEN');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5kZWZpbml0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItZ3JpZC1sYXlvdXQvc3JjL2xpYi9ncmlkLmRlZmluaXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFrRC9DLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFtRCxJQUFJLGNBQWMsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tcGFjdFR5cGUgfSBmcm9tICcuL3V0aWxzL3JlYWN0LWdyaWQtbGF5b3V0LnV0aWxzJztcclxuaW1wb3J0IHsgS3RkQ2xpZW50UmVjdCB9IGZyb20gJy4vdXRpbHMvY2xpZW50LXJlY3QnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBLdGRHcmlkTGF5b3V0SXRlbSB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgeDogbnVtYmVyO1xyXG4gICAgeTogbnVtYmVyO1xyXG4gICAgdzogbnVtYmVyO1xyXG4gICAgaDogbnVtYmVyO1xyXG4gICAgbWluVz86IG51bWJlcjtcclxuICAgIG1pbkg/OiBudW1iZXI7XHJcbiAgICBtYXhXPzogbnVtYmVyO1xyXG4gICAgbWF4SD86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgS3RkR3JpZENvbXBhY3RUeXBlID0gQ29tcGFjdFR5cGU7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEt0ZEdyaWRDZmcge1xyXG4gICAgY29sczogbnVtYmVyO1xyXG4gICAgcm93SGVpZ2h0OiBudW1iZXIgfCAnZml0JzsgLy8gcm93IGhlaWdodCBpbiBwaXhlbHNcclxuICAgIGhlaWdodD86IG51bWJlciB8IG51bGw7XHJcbiAgICBsYXlvdXQ6IEt0ZEdyaWRMYXlvdXRJdGVtW107XHJcbiAgICBwcmV2ZW50Q29sbGlzaW9uOiBib29sZWFuO1xyXG4gICAgZ2FwOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEt0ZEdyaWRMYXlvdXQgPSBLdGRHcmlkTGF5b3V0SXRlbVtdO1xyXG5cclxuLy8gVE9ETzogUmVtb3ZlIHRoaXMgaW50ZXJmYWNlLiBJZiBjYW4ndCByZW1vdmUsIG1vdmUgYW5kIHJlbmFtZSB0aGlzIGludGVyZmFjZSBpbiB0aGUgY29yZSBtb2R1bGUgb3Igc2ltaWxhci5cclxuZXhwb3J0IGludGVyZmFjZSBLdGRHcmlkSXRlbVJlY3Qge1xyXG4gICAgdG9wOiBudW1iZXI7XHJcbiAgICBsZWZ0OiBudW1iZXI7XHJcbiAgICB3aWR0aDogbnVtYmVyO1xyXG4gICAgaGVpZ2h0OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgS3RkR3JpZEl0ZW1SZW5kZXJEYXRhPFQgPSBudW1iZXIgfCBzdHJpbmc+IHtcclxuICAgIGlkOiBzdHJpbmc7XHJcbiAgICB0b3A6IFQ7XHJcbiAgICBsZWZ0OiBUO1xyXG4gICAgd2lkdGg6IFQ7XHJcbiAgICBoZWlnaHQ6IFQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBXZSBpbmplY3QgYSB0b2tlbiBiZWNhdXNlIG9mIHRoZSAnY2lyY3VsYXIgZGVwZW5kZW5jeSBpc3N1ZSB3YXJuaW5nJy4gSW4gY2FzZSB3ZSBkb24ndCBoYWQgdGhpcyBpc3N1ZSB3aXRoIHRoZSBjaXJjdWxhciBkZXBlbmRlbmN5LCB3ZSBjb3VsZCBqdXN0XHJcbiAqIGltcG9ydCBLdGRHcmlkQ29tcG9uZW50IG9uIEt0ZEdyaWRJdGVtIGFuZCBleGVjdXRlIHRoZSBuZWVkZWQgZnVuY3Rpb24gdG8gZ2V0IHRoZSByZW5kZXJpbmcgZGF0YS5cclxuICovXHJcbmV4cG9ydCB0eXBlIEt0ZEdyaWRJdGVtUmVuZGVyRGF0YVRva2VuVHlwZSA9IChpZDogc3RyaW5nKSA9PiBLdGRHcmlkSXRlbVJlbmRlckRhdGE8c3RyaW5nPjtcclxuZXhwb3J0IGNvbnN0IEdSSURfSVRFTV9HRVRfUkVOREVSX0RBVEFfVE9LRU46IEluamVjdGlvblRva2VuPEt0ZEdyaWRJdGVtUmVuZGVyRGF0YVRva2VuVHlwZT4gPSBuZXcgSW5qZWN0aW9uVG9rZW4oJ0dSSURfSVRFTV9HRVRfUkVOREVSX0RBVEFfVE9LRU4nKTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgS3RkRHJhZ2dpbmdEYXRhIHtcclxuICAgIHBvaW50ZXJEb3duRXZlbnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50O1xyXG4gICAgcG9pbnRlckRyYWdFdmVudDogTW91c2VFdmVudCB8IFRvdWNoRXZlbnQ7XHJcbiAgICBncmlkRWxlbUNsaWVudFJlY3Q6IEt0ZENsaWVudFJlY3Q7XHJcbiAgICBkcmFnRWxlbUNsaWVudFJlY3Q6IEt0ZENsaWVudFJlY3Q7XHJcbiAgICBzY3JvbGxEaWZmZXJlbmNlOiB7IHRvcDogbnVtYmVyLCBsZWZ0OiBudW1iZXIgfTtcclxufVxyXG4iXX0=